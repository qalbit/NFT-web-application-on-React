{"version":3,"sources":["partials/Footer.js","utils/constant.js","partials/Header.js","partials/nft_compare/CompareResult.js","partials/nft_compare/First_Nft_Search.js","partials/nft_compare/First_Result.js","partials/nft_compare/NftComparisionGraph.js","partials/nft_compare/Second_Nft_Search.js","partials/nft_compare/Second_Result.js","utils/axios.js","utils/Requests.js","pages/CompareNfts.js","pages/ContactUs.js","actions/index.js","utils/common.js","partials/DotBar.js","partials/MobileNftList.js","partials/NftListItem.js","partials/NftRankGraph.js","partials/NftList.js","partials/CarouselItem.js","partials/TrendingNfts.js","pages/Home.js","partials/submit_nft/UploadImageInput.js","pages/SubmitNft.js","partials/upcoming_nft/SocialMediaInput.js","partials/upcoming_nft/UploadImageInput.js","partials/UpcommingNftForm.js","partials/UpcommingNftList.js","pages/UpcommingNft.js","pages/Main.js","partials/NoMatch.js","reducers/listNft.js","reducers/trendingNft.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","target","assetUrl","nftAssetUrl","serverUrl","Header","_ref","route","Fragment","react_router_dom","to","src","alt","width","height","CompareResult","firstSelectedCoinDetail","secondSelectedCoinDetail","_useState","useState","_useState2","Object","slicedToArray","compareResult","setcompareResult","useEffect","stats","secondSelectedCoinDetail_stats_ceiling","ceiling","secondSelectedCoinDetail_stats_average","average","secondSelectedCoinDetail_stats_volume","volume","secondSelectedCoinDetail_stats_totalSales","totalSales","firstSelectedCoinDetail_stats_ceiling","firstSelectedCoinDetail_stats_average","firstSelectedCoinDetail_stats_volume","firstSelectedCoinDetail_stats_totalSales","market_cap_percentage","average_percentage","volume_percentage","totalSales_percentage","title","name","market_cap","Math","abs","toFixed","Infinity","isNaN","First_Nft_Search","firstCoin","setfirstCoin","setfirstSelectedCoin","firstSelectedCoin","firstSearchList","setfirstSearchList","objectWithoutProperties","showfirstlist","setshowfirstlist","tabIndex","onFocus","onBlur","type","id","value","placeholder","onChange","e","autoComplete","style","display","edges","length","map","item","index","key","onClick","address","node","symbol","First_Result","isFirstDeatilLoading","images","url","floor","ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","NftComparisionGraph","firstNftGraphData","secondNftGraphData","firstNftGraphDataLoading","secondNftGraphDataLoading","getOrCreateTooltip","chart","tooltipEl","canvas","parentNode","querySelector","document","background","borderRadius","color","opacity","pointerEvents","position","transform","transition","table","margin","appendChild","dataset","labels","push","label","data","fill","backgroundColor","borderColor","customData","tooltip","x_axis","datasets","options","plugins","enabled","external","context","body","titleLines","bodyLines","b","lines","tableHead","forEach","tr","borderWidth","th","text","createTextNode","tableBody","i","labelColors","td","innerHTML","fontSize","tableRoot","firstChild","remove","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","left","caretX","top","caretY","font","bodyFont","string","padding","callbacks","console","log","dataIndex","scales","y","beginAtZero","index_modern","Second_Nft_Search","secondCoin","setsecondCoin","setsecondSelectedCoin","secondSelectedCoin","secondSearchList","setsecondSearchList","showsecondlist","setshowsecondlist","Second_Result","isSecondDeatilLoading","axios","defaults","headers","common","instance","create","baseURL","requests","all","trending_nft","submit_nft","do_like","check_email_exist","tranding_chart","upcomming_nft","submit_upcomming_nft","get_utilities","filter_nftlists","search_nft","get_nft_detail","get_nft_history","CompareNfts","myclient","_useState3","_useState4","_useState5","_useState6","setfirstSelectedCoinDetail","_useState7","_useState8","_useState9","_useState10","setisFirstDeatilLoading","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setsecondSelectedCoinDetail","_useState17","_useState18","_useState19","_useState20","setisSecondDeatilLoading","firstCoinTimeout","secondCoinTimeout","_useState21","_useState22","setfirstNftGraphData","_useState23","_useState24","setfirstNftGraphDataLoading","_useState25","_useState26","setsecondNftGraphData","_useState27","_useState28","setsecondNftGraphDataLoading","get_search_data","_ref2","asyncToGenerator","regenerator_default","mark","_callee","param","callback","result","wrap","_context","prev","next","post","then","contracts","catch","error","abrupt","stop","_x","_x2","apply","this","arguments","get_selected_nft_details","loading_callback","callback2","loading_callback2","response","setTimeout","clearTimeout","action","method","nft_compare_First_Nft_Search","temp","nft_compare_Second_Nft_Search","nft_compare_First_Result","nft_compare_CompareResult","nft_compare_Second_Result","nft_compare_NftComparisionGraph","ContactUs","trendingNft","payload","undefined","listNft","set_loading","message","toast","loading","resolve_loading","status","update","render","isLoading","autoClose","closeButton","calculate_average","popularity","originality","community","growth_evaluation","resell_evaluation","potential_blue_chip","parseInt","calculate_grade","score","DotBar","bars","item_fill","liked","JSON","parse","localStorage","getItem","MobileNftList","nft_images","image","nft_name","fname","nft_link","preventDefault","$","slideDown","slideUp","total_likes","includes","totalLike","setItem","stringify","elm","getElementsByClassName","closest","getElementsByTagName","classList","add","elm2","addLike","partials_DotBar","twitter_link","rel","discord_link","collection_blockchain","maximum_number_in_collection","NftListItem","uniquekey","uuidv4","utility","colSpan","BarElement","NftRankGraph","graphData","months","likes","element","hoverBackgroundColor","stack","responsive","interaction","intersect","x","stacked","grid","size","ticks","NftList","list_nft","useSelector","state","dispatch","useDispatch","is_list_nft_loading","set_is_list_nft_loading","set_is_graph_nft_loading","nftGraphData","setNftGraphData","searchAverageSort","setsearchAverageSort","search_average","setSearch_average","filterData","setfilterData","utilities","setutilities","showFilter","setShowFilter","showMyCustomSelect","setshowMyCustomSelect","isFilterEnable","setisFilterEnable","get","objectSpread","average_sort","cancelTokenSource","ax","CancelToken","source","cancelToken","token","params","keys","values","cancel","slideToggle","aria-hidden","prop","defineProperty","join","readOnly","getElementById","focus","htmlFor","checked","concat","toConsumableArray","tempprev","filter","Typography","gutterBottom","marginTop","class","Slider","event","newValue","valueLabelDisplay","partials_NftListItem","partials_MobileNftList","partials_NftRankGraph","CarouselItem","TrendingNfts","is_trending_nft_loading","useRef","OwlCarousel_default","items","loop","autoplay","autoplayTimeout","0","768","1200","dots","partials_CarouselItem","Home","set_is_trending_nft_loading","partials_TrendingNfts","partials_NftList","UploadImageInput","uploadImagesData","saveNftImages","deleteNftImages","validate","nftDataError","accept","submit_nft_image","nft_image","loadingId","SubmitNft","setNftData","setNftDataError","thankyou","setThankyou","setUploadImagesData","saveNftData","files","el","trim","match","checkEmail","email","field_name","onSubmit","flag","form","Array","from","elements","formData","FormData","append","file","disabled","reset","_i","_Object$entries","entries","split","finally","encType","project_name","opensea_link","min","item_sold","collection_contract_address","submit_nft_UploadImageInput","SocialMediaInput","addSocialMediaField","deleteSocialMediaField","socialMediaData","socialMediaDataError","upcommingNftDataError","defaultValue","social_media","social_media_link","media","media_link","setuploadImagesData","upcoming_nft_image","upcoming_nft_images","UpcommingNftForm","startDate","setstartDate","setupcommingNftData","setupcommingNftDataError","setSocialMediaData","setsocialMediaDataError","timezoneSelectorOptions","moment","tz","names","reduce","memo","offset","utcOffset","sort","timezone","format","option","validate_social_media","social_media_message","social_media_link_message","website","react_datepicker_min_default","selected","date","minDate","Date","placeholderText","onChangeRaw","release_date","onblurLunchTime","release_time","timeZoneSelect","network","step","unit_price_eth","max_number_collection","upcoming_nft_SocialMediaInput","upcoming_nft_UploadImageInput","cols","rows","briefdescription","UpcommingNftList","setupcomming_nft","socialmedia","UpcommingNft","partials_UpcommingNftForm","partials_UpcommingNftList","Main","location","useLocation","myRoute","setMyRoute","pathname","partials_Header","react_router","exact","path","pages_CompareNfts","pages_SubmitNft","pages_UpcommingNft","pages_ContactUs","pages_Home","react_toastify_esm","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","partials_Footer","NoMatch","allReducres","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","pages_Main","partials_NoMatch","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d826dfca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"gemstool-footer\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"credits\">\r\n                        <div className=\"copyright\">\r\n                            <span>Copyright 2022 | Gems Tools</span>\r\n                        </div>\r\n                        <div className=\"developed\">\r\n                            <span>Designed and Developed by <a href=\"https://qalbit.com/\" target=\"_blank\"> QalbIT Solution </a> </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","\r\nexport const baseUrl = \"https://gems.tools/\";\r\nexport const assetUrl = \"https://gems.tools/\";\r\nexport const serverUrl = \"https://gems.tools/\";\r\nexport const nftAssetUrl = serverUrl+\"storage/images/nftimages/\";\r\n\r\n\r\n\r\nexport const graphql_endpoint = \"https://graphql.icy.tools/graphql\";\r\n\r\n// const client = new ApolloClient({ link: new HttpLink({ uri: '/graphql', fetch })});    \")\r\n\r\n//http://dev.qalbit.com/gemstools/\r\n// -> Local : storage/images/nftimages/\r\n// -> Live: storage/app/public/images/nftimages/\r\n\r\n// Favicon : https://dev.qalbit.com/gemstools/images/favicon.png\r\n/*\r\n    replace {{asset('images')}}/favicon.png in favicon in welcome.blade.php\r\n*/","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { assetUrl } from '../utils/constant';\r\nfunction Header({route}) {\r\n    return (\r\n\r\n        <>\r\n        <header>\r\n            <nav className=\"head-nav\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"brand-logo\">\r\n                            <Link to=\"/\"><img src={assetUrl+\"images/gemstool-logo.png\"} alt=\"NFTs Grades image\" width=\"180px\" height=\"46px\" /></Link>\r\n                        </div>\r\n                        <div className=\"nav-links\">\r\n                            <div className=\"hemburger\">\r\n                                <button >\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"nav-links\">\r\n                                <ul className=\"user-list\">\r\n                                    <li>\r\n                                        <Link to=\"/compare-nft\" className={(route == '/compare-nft') ? 'active' : ''}>Compare NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/upcomming-nft\" className={(route == '/upcomming-nft') ? 'active' : ''}>Upcoming NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/submit-nft\" className={(route == '/submit-nft') ? 'active' : ''}>Submit NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/contact-us\" className={(route == '/contact-us') ? 'active' : ''}>Contact us</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mobile-nav\">\r\n                            <ul className=\"mobile-userlist\">\r\n                                <li>\r\n                                    <Link to=\"/compare-nft\">Compare NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/submit-nft\">Submit NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/upcomming-nft\">Upcoming NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/contact-us\">Contact us</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CompareResult({ firstSelectedCoinDetail, secondSelectedCoinDetail }) {\r\n  const [compareResult, setcompareResult] = useState(null);\r\n  useEffect(() => {\r\n    if (firstSelectedCoinDetail != null && secondSelectedCoinDetail != null) {\r\n\r\n        if(secondSelectedCoinDetail.stats){\r\n            var secondSelectedCoinDetail_stats_ceiling = secondSelectedCoinDetail.stats.ceiling\r\n            var secondSelectedCoinDetail_stats_average = secondSelectedCoinDetail.stats.average\r\n            var secondSelectedCoinDetail_stats_volume = secondSelectedCoinDetail.stats.volume\r\n            var secondSelectedCoinDetail_stats_totalSales = secondSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            // var market_cap_percentage = 0;\r\n            // var average_percentage = 0;\r\n            // var volume_percentage = 0;\r\n            // var totalSales_percentage = 0;\r\n            var secondSelectedCoinDetail_stats_ceiling = 0;\r\n            var secondSelectedCoinDetail_stats_average = 0;\r\n            var secondSelectedCoinDetail_stats_volume = 0;\r\n            var secondSelectedCoinDetail_stats_totalSales = 0;\r\n        }\r\n\r\n        if(firstSelectedCoinDetail.stats){\r\n            var firstSelectedCoinDetail_stats_ceiling = firstSelectedCoinDetail.stats.ceiling\r\n            var firstSelectedCoinDetail_stats_average = firstSelectedCoinDetail.stats.average\r\n            var firstSelectedCoinDetail_stats_volume = firstSelectedCoinDetail.stats.volume\r\n            var firstSelectedCoinDetail_stats_totalSales = firstSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            var firstSelectedCoinDetail_stats_ceiling = 0\r\n            var firstSelectedCoinDetail_stats_average = 0\r\n            var firstSelectedCoinDetail_stats_volume = 0\r\n            var firstSelectedCoinDetail_stats_totalSales = 0\r\n        }\r\n\r\n        var market_cap_percentage = (secondSelectedCoinDetail_stats_ceiling || 0) > (firstSelectedCoinDetail_stats_ceiling || 0) ? \r\n            ((secondSelectedCoinDetail_stats_ceiling || 0) / (firstSelectedCoinDetail_stats_ceiling || 0)) :\r\n            ((firstSelectedCoinDetail_stats_ceiling || 0) / (secondSelectedCoinDetail_stats_ceiling || 0));\r\n        var average_percentage = (secondSelectedCoinDetail_stats_average || 0) > (firstSelectedCoinDetail_stats_average || 0) ? \r\n            ((secondSelectedCoinDetail_stats_average || 0) / (firstSelectedCoinDetail_stats_average || 0)) :\r\n            ((firstSelectedCoinDetail_stats_average || 0) / (secondSelectedCoinDetail_stats_average || 0));\r\n        var volume_percentage = (secondSelectedCoinDetail_stats_volume || 0) > (firstSelectedCoinDetail_stats_volume || 0) ? \r\n            ((secondSelectedCoinDetail_stats_volume || 0) / (firstSelectedCoinDetail_stats_volume || 0)) :\r\n            ((firstSelectedCoinDetail_stats_volume || 0) / (secondSelectedCoinDetail_stats_volume || 0));\r\n        var totalSales_percentage = (secondSelectedCoinDetail_stats_totalSales || 0) > (firstSelectedCoinDetail_stats_totalSales || 0) ? \r\n            ((secondSelectedCoinDetail_stats_totalSales || 0) / (firstSelectedCoinDetail_stats_totalSales || 0)) :\r\n            ((firstSelectedCoinDetail_stats_totalSales || 0) / (secondSelectedCoinDetail_stats_totalSales || 0));\r\n\r\n      setcompareResult({\r\n        title: [firstSelectedCoinDetail.name, secondSelectedCoinDetail.name],\r\n        market_cap: secondSelectedCoinDetail_stats_ceiling - firstSelectedCoinDetail_stats_ceiling,\r\n        market_cap_percentage: market_cap_percentage,\r\n        average: secondSelectedCoinDetail_stats_average - firstSelectedCoinDetail_stats_average,\r\n        average_percentage: average_percentage,\r\n        volume: secondSelectedCoinDetail_stats_volume - firstSelectedCoinDetail_stats_volume,\r\n        volume_percentage: volume_percentage,\r\n        totalSales: secondSelectedCoinDetail_stats_totalSales - firstSelectedCoinDetail_stats_totalSales,\r\n        totalSales_percentage: totalSales_percentage,\r\n      });\r\n    } else {\r\n      setcompareResult(null);\r\n    }\r\n    return () => {};\r\n  }, [firstSelectedCoinDetail, secondSelectedCoinDetail]);\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [compareResult])\r\n  \r\n//   tubby cats by tubby collective\r\n  return (\r\n    <div className=\"result-box\">\r\n        {\r\n            compareResult != null ? \r\n            <>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"box-wrapper\">\r\n                        <div className=\"header diff-head\">\r\n                        <div className=\"small-heading\">Difference</div>\r\n                        <h3 className=\"heading\">\r\n                            <span className=\"nft-name\">{compareResult.title[0]}</span><span className=\"highlight\">vs</span><span className=\"nft-name\">{compareResult.title[1]}</span>\r\n                        </h3>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                        <div className=\"stats diff-stats\">\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Market Cap</div>\r\n                            <div className=\"number\">\r\n                                {\r\n                                    compareResult.market_cap < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">\r\n                                            {Math.abs(compareResult.market_cap).toFixed(2)}\r\n                                            <small>({ (compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage)) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small>\r\n                                        </span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.market_cap).toFixed(2)} <small>({compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item br-none\">\r\n                            <div className=\"title\">Average</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.average < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Volume</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.volume < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Sale</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.totalSales < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            :\r\n            <></>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareResult;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction First_Nft_Search({\r\n    firstCoin,\r\n    setfirstCoin,\r\n    firstSelectedCoin,\r\n    setfirstSelectedCoin,\r\n    firstSearchList,\r\n    setfirstSearchList, ...prop\r\n}) {\r\n\r\n    const [showfirstlist, setshowfirstlist] = useState(false)\r\n\r\n  return (\r\n    <div className=\"form-group nft-search-container\"\r\n        \r\n    >\r\n      <label>Select A</label>\r\n      <div  tabIndex={1} \r\n        onFocus={()=>{\r\n          setshowfirstlist(true)\r\n        }}\r\n        onBlur={()=>{\r\n            setshowfirstlist(false)\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_a\"\r\n          id=\"select_a\"\r\n          value={firstCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setfirstCoin(null);\r\n            } else {\r\n              setfirstCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n        <div className=\"nft-search-result-container\" style={{ display: (firstSearchList == null || !showfirstlist) ? \"none\" : \"block\" }}>\r\n          {firstSearchList != null ? (\r\n            <>\r\n              {firstSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">\r\n                        Loading...\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                  {\r\n                    firstSearchList.edges.length > 0 ? <>\r\n                      {firstSearchList.edges.map((item, index) => {\r\n                        return (\r\n                          <li key={index} onClick={(e)=>{\r\n                            setfirstSelectedCoin({\r\n                                address: item.node.address\r\n                            })\r\n                            setshowfirstlist(false)\r\n                            setfirstCoin(item.node.name);\r\n\r\n                          }}>\r\n                            <span className=\"counter\">\r\n                                #{index+1}\r\n                            </span>\r\n                            <span className=\"detail\">\r\n                                {item.node.name}, {item.node.symbol}\r\n                            </span>\r\n                            \r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </> :\r\n                    <>\r\n                      <li>\r\n                        <div className=\"detail\">No record found.</div>\r\n                      </li>\r\n                    </>\r\n                  }\r\n                    \r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction First_Result({firstSelectedCoinDetail,isFirstDeatilLoading}) {\r\n\r\n    if(isFirstDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n    if(firstSelectedCoinDetail == null || firstSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        );   \r\n    }\r\n  return (\r\n    <div className=\"result-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {firstSelectedCoinDetail && firstSelectedCoinDetail.images && firstSelectedCoinDetail.images.url ? (\r\n                <>\r\n                  <img src={firstSelectedCoinDetail.images.url} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats ? firstSelectedCoinDetail.stats.floor.toFixed(2) : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Result;\r\n","import { CategoryScale, Chart as ChartJS, LinearScale, LineElement, PointElement, Title, Tooltip } from \"chart.js\";\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip);\r\n\r\nfunction NftComparisionGraph({\r\n  firstNftGraphData,\r\n  secondNftGraphData,\r\n  firstNftGraphDataLoading,\r\n  secondNftGraphDataLoading,\r\n  firstSelectedCoinDetail,\r\n  secondSelectedCoinDetail,\r\n}) {\r\n  if (firstNftGraphDataLoading || secondNftGraphDataLoading) {\r\n    return (\r\n      <>\r\n        <div className=\"std-loading-design\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // ------------------------------\r\n\r\n  // tooltip custom function\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const { chart, tooltip } = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n\r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n\r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map((b) => b.lines);\r\n\r\n      const tableHead = document.createElement(\"thead\");\r\n\r\n      titleLines.forEach((title) => {\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.borderWidth = 0;\r\n\r\n        const th = document.createElement(\"th\");\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n\r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n\r\n      const tableBody = document.createElement(\"tbody\");\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.backgroundColor = \"inherit\";\r\n        tr.style.borderWidth = 0;\r\n\r\n        const td = document.createElement(\"td\");\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement(\"div\");\r\n        text.innerHTML = body.length > 0 ? body[0] : '';\r\n        td.style.fontSize = \"11px\";\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n\r\n      const tableRoot = tooltipEl.querySelector(\"table\");\r\n\r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n\r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n\r\n    const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\r\n\r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + \"px\";\r\n    tooltipEl.style.top = positionY + tooltip.caretY + \"px\";\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + \"px \" + tooltip.options.padding + \"px\";\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector(\"div\");\r\n\r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement(\"div\");\r\n      tooltipEl.style.background = \"rgba(0, 0, 0, 0.7)\";\r\n      tooltipEl.style.borderRadius = \"3px\";\r\n      tooltipEl.style.color = \"white\";\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = \"none\";\r\n      tooltipEl.style.position = \"absolute\";\r\n      tooltipEl.style.transform = \"translate(-50%, 0)\";\r\n      tooltipEl.style.transition = \"all .1s ease\";\r\n\r\n      const table = document.createElement(\"table\");\r\n      table.style.margin = \"0px\";\r\n      table.style.width = \"100px\";\r\n\r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n\r\n    return tooltipEl;\r\n  };\r\n  // ----------------------\r\n\r\n  let dataset = [];\r\n  var labels = null;\r\n  if (secondNftGraphData) {\r\n    dataset.push({\r\n      label: secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : null,\r\n      data: secondNftGraphData && secondNftGraphData.average ? secondNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"#742774\",\r\n      borderColor: \"#742774\",\r\n      customData: secondNftGraphData.tooltip,\r\n    });\r\n    labels = secondNftGraphData.x_axis;\r\n  }\r\n  if (firstNftGraphData) {\r\n    dataset.push({\r\n      label: firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : null,\r\n      data: firstNftGraphData && firstNftGraphData.average ? firstNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n      customData: firstNftGraphData.tooltip,\r\n    });\r\n    labels = firstNftGraphData && firstNftGraphData.x_axis ? firstNftGraphData.x_axis : null;\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: dataset,\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      tooltip: {\r\n        enabled: false,\r\n        position: \"nearest\",\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            console.log(item);\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NftComparisionGraph;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Second_Nft_Search({\r\n  secondCoin,\r\n  setsecondCoin,\r\n  secondSelectedCoin,\r\n  setsecondSelectedCoin,\r\n  secondSearchList,\r\n  setsecondSearchList,\r\n  ...prop\r\n}) {\r\n  const [showsecondlist, setshowsecondlist] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"form-group nft-search-container\"\r\n    >\r\n      <label>Select B</label>\r\n\r\n      <div\r\n        tabIndex={1}\r\n        onFocus={() => {\r\n          setshowsecondlist(true);\r\n        }}\r\n        onBlur={() => {\r\n          setshowsecondlist(false);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_b\"\r\n          id=\"select_b\"\r\n          value={secondCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setsecondCoin(null);\r\n            } else {\r\n              setsecondCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <div\r\n          className=\"nft-search-result-container\"\r\n          style={{ display: secondSearchList == null || !showsecondlist ? \"none\" : \"block\" }}\r\n        >\r\n          {secondSearchList != null ? (\r\n            <>\r\n              {secondSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">Loading...</div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    {secondSearchList.edges.length > 0 ? (\r\n                      <>\r\n                        {secondSearchList.edges.map((item, index) => {\r\n                          return (\r\n                            <li\r\n                              key={index}\r\n                              onClick={(e) => {\r\n                                setsecondSelectedCoin({\r\n                                  address: item.node.address,\r\n                                });\r\n                                setshowsecondlist(false);\r\n                                setsecondCoin(item.node.name);\r\n                              }}\r\n                            >\r\n                              <span className=\"counter\">#{index + 1}</span>\r\n                              <span className=\"detail\">\r\n                                {item.node.name}, {item.node.symbol}\r\n                              </span>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          <div className=\"detail\">No record found.</div>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction Second_Result({secondSelectedCoinDetail,isSecondDeatilLoading}) {\r\n\r\n    if(isSecondDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n    }\r\n    if(secondSelectedCoinDetail == null || secondSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        ); \r\n    }\r\n  return (\r\n    <div className=\"result-box last-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {secondSelectedCoinDetail && secondSelectedCoinDetail.images && secondSelectedCoinDetail.images.url ? (\r\n                <>\r\n                  <img src={secondSelectedCoinDetail.images.url} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.floor.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Result;\r\n","import axios from \"axios\";\r\n// http://192.168.1.7:8000\r\n// http://dev.qalbit.com/gemstools\r\n// https://gems.tools/\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\nconst instance = axios.create({\r\n    baseURL: \"https://gems.tools\"\r\n});\r\n\r\nexport default instance","const requests = {\r\n    all: `/api/nftlists`,\r\n    trending_nft : `/api/trendingnft`,\r\n    submit_nft: `/api/submit-nft`,\r\n    do_like: `/api/do-like`,\r\n    check_email_exist: `/api/checkemail`,\r\n    tranding_chart: `/api/graphdata`,\r\n    upcomming_nft: `/api/upcomingnft`,\r\n    submit_upcomming_nft: `/api/add-upcoming-nft`,\r\n    get_utilities: `/api/utilities`,\r\n    filter_nftlists: `/api/filter_nftlists`,\r\n    search_nft: `/api/search-nft`,\r\n    get_nft_detail: `/api/get-nft-detail`,\r\n    get_nft_history: `/api/get-nft-history`,\r\n}\r\nexport default requests;","import React, { useEffect, useState } from 'react';\r\nimport CompareResult from '../partials/nft_compare/CompareResult';\r\nimport First_Nft_Search from '../partials/nft_compare/First_Nft_Search';\r\nimport First_Result from '../partials/nft_compare/First_Result';\r\nimport NftComparisionGraph from '../partials/nft_compare/NftComparisionGraph';\r\nimport Second_Nft_Search from '../partials/nft_compare/Second_Nft_Search';\r\nimport Second_Result from '../partials/nft_compare/Second_Result';\r\nimport axios from \"../utils/axios\";\r\nimport requests from '../utils/Requests';\r\n\r\nfunction CompareNfts({myclient}) {\r\n  const [firstCoin, setfirstCoin] = useState(null)\r\n  const [firstSelectedCoin, setfirstSelectedCoin] = useState(null)\r\n  const [firstSelectedCoinDetail, setfirstSelectedCoinDetail] = useState(null)\r\n  const [firstSearchList, setfirstSearchList] = useState(null)\r\n  const [isFirstDeatilLoading, setisFirstDeatilLoading] = useState(false)\r\n  \r\n  const [secondCoin, setsecondCoin] = useState(null)\r\n  const [secondSelectedCoin, setsecondSelectedCoin] = useState(null)\r\n  const [secondSelectedCoinDetail, setsecondSelectedCoinDetail] = useState(null)\r\n  const [secondSearchList, setsecondSearchList] = useState(null)\r\n  const [isSecondDeatilLoading, setisSecondDeatilLoading] = useState(false)\r\n  let firstCoinTimeout = null;\r\n  let secondCoinTimeout = null;\r\n\r\n\r\n  const [firstNftGraphData, setfirstNftGraphData] = useState(null)\r\n  const [firstNftGraphDataLoading, setfirstNftGraphDataLoading] = useState(false)\r\n\r\n  const [secondNftGraphData, setsecondNftGraphData] = useState(null)\r\n  const [secondNftGraphDataLoading, setsecondNftGraphDataLoading] = useState(false)\r\n\r\n  // https://graphql.icy.tools/graphql\r\n  \r\n  const searchByName = (e) => {\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // swip the Nft search box\r\n  const swapCoin = () => {\r\n    // setisFirstDeatilLoading(true)\r\n    // setisSecondDeatilLoading(true)\r\n\r\n    let temp = firstCoin == null ? '' : firstCoin;\r\n    setfirstCoin(secondCoin == null ? '' : secondCoin)\r\n    setsecondCoin(temp)\r\n\r\n    setsecondSelectedCoinDetail(null)\r\n    setfirstSelectedCoinDetail(null)\r\n    \r\n    temp = firstSelectedCoin == null ? '' : firstSelectedCoin;\r\n    setfirstSelectedCoin(secondSelectedCoin == null ? '' : secondSelectedCoin);\r\n    setsecondSelectedCoin(temp);\r\n    \r\n    setsecondNftGraphData(null)\r\n    setfirstNftGraphData(null)\r\n\r\n  }\r\n  \r\n  // get seatch data and store in state\r\n  const get_search_data = async (param, callback) => {\r\n    var result = null\r\n    await axios.post(requests.search_nft, {\r\n        name : param\r\n      }).then((result) => {\r\n        callback(result.data.data.data.contracts)\r\n      })\r\n      .catch((error)=>{});\r\n    return result\r\n  }\r\n  \r\n  // get selected nft detail\r\n  const get_selected_nft_details = (address, callback, loading_callback, callback2, loading_callback2) => {\r\n    axios.post(requests.get_nft_detail, {\r\n      address : address.address\r\n      }).then((result) => {\r\n        loading_callback(false)\r\n        callback(result.data.data)\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback(false)\r\n      });\r\n\r\n    loading_callback2(true);\r\n    axios.post(requests.get_nft_history, {\r\n      address : address.address\r\n      }).then(response => response.data)\r\n      .then((result) => {\r\n        callback2({\r\n          average: result.data.average,\r\n          x_axis: result.data.x_axis,\r\n          tooltip: result.data.tooltip,\r\n        });        // callback2(result.data.data)\r\n        loading_callback2(false);\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback2(false);\r\n      });\r\n  }\r\n  \r\n  // On first coin change\r\n  useEffect(() => {\r\n    if(firstCoin == null || firstCoin == ''){\r\n      setfirstSearchList(null)\r\n    }\r\n    else{\r\n      setfirstSearchList('loading')\r\n      firstCoinTimeout = setTimeout(() => {\r\n        get_search_data(firstCoin, setfirstSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(firstCoinTimeout)\r\n    }\r\n  }, [firstCoin])\r\n\r\n  // On second coin change\r\n  useEffect(() => {\r\n    if(secondCoin == null || secondCoin == ''){\r\n      setsecondSearchList(null)\r\n    }\r\n    else{\r\n      setsecondSearchList('loading')\r\n      secondCoinTimeout = setTimeout(() => {\r\n        get_search_data(secondCoin, setsecondSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(secondCoinTimeout)\r\n    }\r\n  }, [secondCoin])\r\n  \r\n\r\n  useEffect(() => {\r\n    // console.log(firstSelectedCoin);\r\n  }, [firstSearchList])\r\n\r\n  useEffect(() => {\r\n    if(firstSelectedCoin != null && firstSelectedCoin != ''){\r\n      setisFirstDeatilLoading(true);\r\n      get_selected_nft_details(firstSelectedCoin, setfirstSelectedCoinDetail, setisFirstDeatilLoading, setfirstNftGraphData, setfirstNftGraphDataLoading)\r\n    }\r\n    else{\r\n      setfirstSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      \r\n    }\r\n  }, [firstSelectedCoin])\r\n  \r\n  useEffect(() => {\r\n    // console.log(secondSelectedCoin);\r\n  }, [firstSearchList])\r\n\r\n  useEffect(() => {\r\n    if(secondSelectedCoin != null && secondSelectedCoin != ''){\r\n      setisSecondDeatilLoading(true);\r\n      get_selected_nft_details(secondSelectedCoin, setsecondSelectedCoinDetail,setisSecondDeatilLoading, setsecondNftGraphData, setsecondNftGraphDataLoading)\r\n    }\r\n    else{\r\n      setsecondSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      \r\n    }\r\n  }, [secondSelectedCoin])\r\n  \r\n  \r\n\r\n\r\n\r\n  return (\r\n    \r\n    <main className=\"main-spacing\">\r\n    {/*  Submit NFTs form start  */}\r\n    <section className=\"compare-nft\">\r\n        <div className=\"nft-container\">\r\n            <div className=\"container-lg\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-12 heading\">\r\n                        <h1> <span className=\"highlight\">Compare</span> NFTs </h1>\r\n                    </div>\r\n                    <div className=\"col-lg-9 left-block\">\r\n                        <div className=\"compare-nft-form\">\r\n                          <form action=\"\" method=\"post\" id=\"compare-nft-form\">\r\n                            <div className=\"box-modal\">\r\n                              <div className=\"select-group\">\r\n\r\n    \r\n                              <First_Nft_Search\r\n                                firstCoin={firstCoin}\r\n                                setfirstCoin={setfirstCoin}\r\n                                firstSelectedCoin={firstSelectedCoin}\r\n                                setfirstSelectedCoin={setfirstSelectedCoin}\r\n                                firstSearchList={firstSearchList}\r\n                                setfirstSearchList={setfirstSearchList}\r\n                              />\r\n                                \r\n                                <div className=\"compare-sign\">\r\n                                  <button className='compare-btn' type='button' onClick={swapCoin}>\r\n                                    <img src=\"./images/compare-icon.png\" alt=\"Compare icon\" />\r\n                                  </button>\r\n                                </div>\r\n\r\n                                <Second_Nft_Search\r\n                                  secondCoin={secondCoin}\r\n                                  setsecondCoin={setsecondCoin}\r\n                                  secondSelectedCoin={secondSelectedCoin}\r\n                                  setsecondSelectedCoin={setsecondSelectedCoin}\r\n                                  secondSearchList={secondSearchList}\r\n                                  setsecondSearchList={setsecondSearchList}\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"diff-result\">\r\n                                <div className=\"result-containers\">\r\n\r\n                                  <First_Result \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    isFirstDeatilLoading={isFirstDeatilLoading}\r\n                                    />\r\n                                  \r\n                                  <CompareResult \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                  />\r\n\r\n                                  <Second_Result \r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                    isSecondDeatilLoading={isSecondDeatilLoading}\r\n                                  />\r\n\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n\r\n                        <div className=\"comparison-graph\">\r\n                          \r\n                          <div className=\"box-modal\">\r\n                            <div className=\"graph-wrapper\">\r\n                              <NftComparisionGraph \r\n                                firstNftGraphData={firstNftGraphData}\r\n                                secondNftGraphData={secondNftGraphData}\r\n                                firstNftGraphDataLoading={firstNftGraphDataLoading}\r\n                                secondNftGraphDataLoading={secondNftGraphDataLoading}\r\n                                firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-lg-3 right-block mt-lg-0 mt-5\">\r\n                        <div className=\"image\">\r\n                            <img src=\"./images/img3.png\" alt=\"dummy image\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    {/*  Submit NFTs form end  */}\r\n\r\n</main>\r\n  )\r\n}\r\n\r\nexport default CompareNfts","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ContactUs() {\r\n    return (\r\n        <main className=\"main-spacing\">\r\n            <section>\r\n                <div className='container-lg'>\r\n                    <h4 className='highlight bold-14 mb-3'>If you have any questions or concerns about your NFT, we offer 24 hour around the clock assistance, you can email or dm us on Twitter!</h4>\r\n                    <div className=\"twitter-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Twitter </span>: <span>GemsToolsNFT</span> </div>\r\n                    </div>\r\n                    <div className=\"mail-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Email </span>: <a href='mailto:gemstoolsnft@gmail.com' className='text-white'> gemstoolsnft@gmail.com </a> </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContactUs\r\n","export const updateDefaultjob = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_DEFAULT_JOB\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const updateCounter = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_COUNTER\",\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport const trendingNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_TRENDING_NFT\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const listNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_LIST_NFT\",\r\n        payload: data,\r\n    };\r\n};","import { toast } from 'react-toastify';\r\n\r\nexport const toast_success = (message) => {\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const toast_warning = (message) => {\r\n    toast.warn(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const set_loading = (message) => {\r\n    return toast.loading(message)\r\n}\r\n\r\nexport const resolve_loading = (id, status, message) => {\r\n    return toast.update(id, { render: message, type:status, isLoading: false, autoClose: 5000,closeButton: true });\r\n}\r\n\r\nexport const calculate_average = (popularity, originality, community, growth_evaluation, resell_evaluation, potential_blue_chip) => {\r\n    return (\r\n        (parseInt(popularity || 0) + parseInt(originality || 0) + parseInt(community || 0) + parseInt(growth_evaluation || 0) + parseInt(resell_evaluation || 0) + parseInt((potential_blue_chip||0)*10)) \r\n    / 6).toFixed(2)\r\n}\r\n\r\nexport const calculate_grade = (score) => {\r\n    if(score >= 90 && score <= 93){\r\n        return 'A-';\r\n    }else if(score >= 94 && score <= 97){\r\n        return 'A';\r\n    }else if(score >= 98 && score <= 100){\r\n        return 'A+';\r\n    }\r\n    else{\r\n        return '-';\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction DotBar({bars}) {\r\n    var color = 'grey';\r\n    var item_fill = 0;\r\n    if(bars > 0 && bars <= 3){\r\n        color = 'red'\r\n        item_fill = 1\r\n    }\r\n    else if(bars > 3 && bars  <= 7){\r\n        color = 'yellow'\r\n        item_fill = 3\r\n    }\r\n    else if(bars > 7 && bars <= 10){\r\n        color = 'green'\r\n        item_fill = 5\r\n    }\r\n  return (\r\n    <div className=\"dot-container\">\r\n        {[1,2,3,4,5].map(function(item, index){\r\n            if(index < item_fill){\r\n                return <span key={index} className={color+ \" dot\"}></span>\r\n            }\r\n            else{\r\n                return <span key={index} className=\"std dot\"></span>\r\n            }\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DotBar","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\n\r\nfunction MobileNftList({data, ...props}) { \r\n  \r\n  const addLike = (id, totalLike) => {\r\n    console.log(id, totalLike);\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  let nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-5 nft-info-col\">\r\n            <div className=\"nft-info\">\r\n              <div className=\"image\">\r\n                <a>\r\n                  <img src={nftAssetUrl+nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"nft-title\">\r\n                <h2 className=\"highlight\">{data.nft_name}</h2>\r\n              </div>\r\n              <div className=\"nft-user\">\r\n                <h3 className=\"peak\">{data.fname}</h3>\r\n              </div>\r\n              <div className=\"nft-redirect-btn\">\r\n                <a href={data.nft_link} target={\"_blank\"}>\r\n                  <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a className=\"highlight imp bold-14 mt-2\" onClick={\r\n                  (e)=>{\r\n                    e.preventDefault();\r\n                    if(e.target.innerHTML == \"Read more\"){\r\n                      $(\".more-detail\"+data.id).slideDown('fast');\r\n                      e.target.innerHTML = \"Read less\";\r\n                    }\r\n                    else{\r\n                      $(\".more-detail\"+data.id).slideUp('fast');\r\n                      e.target.innerHTML = \"Read more\";\r\n                    }\r\n                  }\r\n                }>Read more</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-7 nft-stat-col\">\r\n          <div className=\"action-btns\">\r\n              <div className=\"mb-2 mobile-like-container\">\r\n                <button className=\"total_liks_count\">\r\n                  <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                </button>\r\n                {\r\n                  liked.includes(data.id) ? <>\r\n                    <button className=\"action liked\">\r\n                      <span>\r\n                      Liked&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </> : <>\r\n                    <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                      <span>\r\n                        Like&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>% NFTs Sold</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Social media</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.community)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Design</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.originality)}</span>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className=\"col-12 mt-2\">\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\"></div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Growth Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.growth_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Resell Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.resell_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Potential Blue Chip</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <div className=\"potential-blue-chip-graph\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Average</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n              <div className={\"mobile-more-detail more-detail\"+data.id} style={{display:'none'}}>\r\n                <div className=\"social-media my-2\">\r\n                  <span className=\"highlight\">Social media: </span>\r\n                  <span>\r\n                    {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                    {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                  </span>\r\n                </div>  \r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"50px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileNftList;\r\n","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\nfunction NftListItem({ data, uniquekey, ...props }) {\r\n  \r\n  const addLike = (id, totalLike) => {\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  var nft_images = JSON.parse(data.image);\r\n\r\n  return (\r\n      <>\r\n          <tr key={uuidv4()} className='border-0'>\r\n            <td>\r\n              <div className=\"nft-detail\">\r\n                <div className=\"image\">\r\n\r\n                  {\r\n                    (nft_images && nft_images.length) > 0 ? <>\r\n                        <a href={nftAssetUrl+nft_images[0]} target={\"_blank\"}>\r\n                            <img src={nftAssetUrl+nft_images[0]} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                        </a>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    </>\r\n                  }\r\n\r\n                  {/* {\r\n                    data.image && <>\r\n                      {\r\n                        nft_images.map((item, index)=>{\r\n                          return <>\r\n                              <a href={nftAssetUrl+item} target={\"_blank\"}>\r\n                                  <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                              </a>\r\n                            </>\r\n                        })\r\n                      }\r\n                    </>\r\n                  } */}\r\n                </div>\r\n                <div className=\"nft-content\">\r\n                    <div className=\"nft-name\">\r\n                        <span>{data.nft_name}</span>\r\n                    </div>\r\n                    {/* <div className=\"nft-user-name\">\r\n                        <span>{data.fname}</span>\r\n                    </div> */}\r\n                    <div className=\"nft-detail-btn\">\r\n                        <a href={data.nft_link} target={'_blank'}>\r\n                            <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <a onClick={\r\n                          (e)=>{\r\n                            e.preventDefault();\r\n                            if(e.target.innerHTML == \"Read more\"){\r\n                              $(\".more-detail\"+data.id).slideDown('fast');\r\n                              e.target.innerHTML = \"Read less\";\r\n                            }\r\n                            else{\r\n                              $(\".more-detail\"+data.id).slideUp('fast');\r\n                              e.target.innerHTML = \"Read more\";\r\n                            }\r\n                          }\r\n                        } className=\"highlight imp bold-14 mt-2\">Read more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            </td>\r\n            <td>{data.utility}</td>\r\n            <td>\r\n              <div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">% NFTs Sold</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Social media</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.community)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Design</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.originality)}</span>\r\n                </div> \r\n\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Growth Evaluation</span>\r\n                  <span className=\"color-orange\">{data.growth_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Resell Evaluation</span>\r\n                  <span className=\"color-orange\">{data.resell_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <div className=\"text-left\">Potential Blue Chip </div>\r\n                  <div className=\"potential-blue-chip-graph text-left\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>            \r\n              </div>\r\n            </td>\r\n            <td>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</td>\r\n            <td>\r\n                <div className=\"action-btns\">\r\n                  <div>\r\n                    <button className=\"total_liks_count\">\r\n                      <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                    </button>\r\n                    {\r\n                      liked.includes(data.id) ? <>\r\n                        <button className=\"action liked\">\r\n                          <span>\r\n                          Liked&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </> : <>\r\n                        <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                          <span>\r\n                            Like&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n          <tr key={uuidv4()} className=\"text-left\">\r\n            <td colSpan={6} className=\"p-0\">\r\n              <div className={\"more-detail\"+data.id} style={{display: 'none'}}>\r\n\r\n                {\r\n                  (data.twitter_link || data.discord_link) ? <>\r\n                    <div className='social-media mb-2'>\r\n                        <span className='highlight'>Social media: </span> \r\n                        <span>\r\n                          {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                          {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                        </span>\r\n                    </div>\r\n                  </>\r\n                  :<>\r\n                  </>\r\n                }\r\n                <div className='other-detail'>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </td>     \r\n          </tr>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default NftListItem;\r\n","import {\r\n  BarElement, CategoryScale, Chart as ChartJS, LinearScale, Title,\r\n  Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n);\r\n\r\n\r\n\r\nfunction NftRankGraph({graphData, ...props}) {\r\n  const labels = graphData.months;\r\n  const dataset = [];\r\n  graphData.data.likes.forEach((element, index) => {\r\n    dataset.push({\r\n      label: graphData.months[index],\r\n      data: element,\r\n      customData: graphData.data.tooltip[index],\r\n      backgroundColor: \"rgb(255, 255, 255)\",\r\n      hoverBackgroundColor: \"rgb(245 222 179)\",\r\n      stack: graphData.months[index],\r\n    })\r\n  });\r\n  \r\n  const data = {\r\n    labels,\r\n    datasets: dataset\r\n  };\r\n\r\n  // [\r\n  //   {\r\n  //     label: \"Dataset 1\",\r\n  //     data: [2, 5, 6],\r\n  //     customData: ['hello', 'how', 'are'],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 0\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 2\",\r\n  //     data: [9, 8, 3],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 1\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 3\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 3\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 4\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 4\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 5\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 5\",\r\n  //   },\r\n  // ]\r\n\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const {chart, tooltip} = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n  \r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n  \r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map(b => b.lines);\r\n  \r\n      const tableHead = document.createElement('thead');\r\n  \r\n      titleLines.forEach(title => {\r\n        const tr = document.createElement('tr');\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const th = document.createElement('th');\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n  \r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n  \r\n      const tableBody = document.createElement('tbody');\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n  \r\n        // const span = document.createElement('span');\r\n        // span.style.background = colors.backgroundColor;\r\n        // span.style.borderColor = colors.borderColor;\r\n        // span.style.borderWidth = '2px';\r\n        // span.style.marginRight = '10px';\r\n        // span.style.height = '10px';\r\n        // span.style.width = '10px';\r\n        // span.style.display = 'inline-block';\r\n  \r\n        const tr = document.createElement('tr');\r\n        tr.style.backgroundColor = 'inherit';\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const td = document.createElement('td');\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement('div');\r\n        text.innerHTML = body[0];\r\n        td.style.fontSize = '12px'\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n  \r\n      const tableRoot = tooltipEl.querySelector('table');\r\n  \r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n  \r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n  \r\n    const {offsetLeft: positionX, offsetTop: positionY} = chart.canvas;\r\n  \r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + 'px';\r\n    tooltipEl.style.top = positionY + tooltip.caretY + 'px';\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector('div');\r\n  \r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement('div');\r\n      tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\r\n      tooltipEl.style.borderRadius = '3px';\r\n      tooltipEl.style.color = 'white';\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = 'none';\r\n      tooltipEl.style.position = 'absolute';\r\n      tooltipEl.style.transform = 'translate(-50%, 0)';\r\n      tooltipEl.style.transition = 'all .1s ease';\r\n  \r\n      const table = document.createElement('table');\r\n      table.style.margin = '0px';\r\n  \r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n  \r\n    return tooltipEl;\r\n  };\r\n\r\n  \r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: 'Tranding NFTs',\r\n      },\r\n      // tooltip: {\r\n      //   callbacks: {\r\n      //     label: function(item) {\r\n      //       console.log(item.dataset.customData[item.dataIndex].replaceAll('<br/>', '\\n'));\r\n      //       return item.dataset.customData[item.dataIndex];\r\n      //     },\r\n      //   },\r\n      // },\r\n      tooltip: {\r\n        enabled: false,\r\n        position: 'nearest',\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      }\r\n    },\r\n    responsive: true,\r\n    interaction: {\r\n      intersect: false,\r\n    },\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n        grid: {\r\n            display: false\r\n        }\r\n        },\r\n    y: {\r\n        title: {\r\n            text: \"TOP TRENDING IN LEADERBOARD VOTES\",\r\n            display: true,\r\n            font:{\r\n                size: 8\r\n            }\r\n        },\r\n        ticks: {\r\n            display: false\r\n        },\r\n        grid: {\r\n            display: false\r\n        }\r\n      },\r\n    },\r\n\r\n  };\r\n  // console.log(graphData);\r\n    return (\r\n        <div className=\"rank-block\">\r\n                <div className=\"bar-graph-wrapper\">\r\n                  <div className=\"heading\">\r\n                    <h2>\r\n                      <span className=\"highlight\">Reflect Rank</span> NFTs\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"bar-graph\">\r\n                    \r\n                  <Bar options={options} data={data} height={200}/>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default NftRankGraph\r\n","import { Slider, Typography } from \"@material-ui/core\";\r\nimport ax from 'axios';\r\nimport $ from 'jquery';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listNft } from \"../actions\";\r\nimport axios from \"../utils/axios\";\r\nimport { assetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport MobileNftList from \"./MobileNftList\";\r\nimport NftListItem from \"./NftListItem\";\r\nimport NftRankGraph from \"./NftRankGraph\";\r\n\r\n\r\nfunction NftList() {\r\n  const list_nft = useSelector((state) => state.listNft);\r\n  const dispatch = useDispatch();\r\n  const [is_list_nft_loading, set_is_list_nft_loading] = useState(true);\r\n  const [is_graph_nft_loading, set_is_graph_nft_loading] = useState(true);\r\n  const [nftGraphData, setNftGraphData] = useState(null);\r\n  const [searchAverageSort, setsearchAverageSort] = useState(null)\r\n  const [search_average, setSearch_average] =  useState([0,100]);\r\n  const [filterData, setfilterData] =  useState({});\r\n  const [utilities, setutilities] =  useState(null);\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  const [showMyCustomSelect, setshowMyCustomSelect] = useState(false)\r\n  const [isFilterEnable, setisFilterEnable] = useState(false)\r\n\r\n  const rangeSelector = (event, newValue) => {\r\n    setfilterData((prev)=>{\r\n      return {\r\n        ...prev, \r\n        average : newValue\r\n      }\r\n    });\r\n    setSearch_average(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(showFilter === true){\r\n      $('.nft-filter-wrapper').slideDown('fast');\r\n    }\r\n    else{\r\n      $('.nft-filter-wrapper').slideUp('fast');\r\n    }\r\n\r\n    if(utilities == null && showFilter === true){\r\n      axios\r\n        .get(requests.get_utilities)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          setutilities(data.data);\r\n        })\r\n        .catch(function(error) {\r\n          // set_is_list_nft_loading(false);\r\n        });\r\n    }\r\n  }, [showFilter])\r\n  \r\n  // const showFilter = (e) => {\r\n    \r\n  // };\r\n\r\n  const filterChangeHandler = (e) => {\r\n    setfilterData((prev)=>{\r\n      return {\r\n        ...prev, \r\n        [e.target.name] : e.target.value == '' ? null : e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    \r\n  }, [search_average]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(showFilter == false){\r\n      set_is_list_nft_loading(true);\r\n      axios\r\n        .get(requests.all)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_list_nft_loading(false);\r\n          if (data.status === \"success\") {\r\n            dispatch(listNft(data.data));\r\n            set_is_list_nft_loading(false);\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          set_is_list_nft_loading(false);\r\n        });\r\n    }\r\n\r\n    if(nftGraphData == null){\r\n      axios\r\n        .get(requests.tranding_chart)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_graph_nft_loading(false);\r\n          setNftGraphData(data.data)\r\n        })\r\n        .catch(function(error) {\r\n          set_is_graph_nft_loading(false);\r\n        });\r\n    }\r\n\r\n\r\n  }, [showFilter]);\r\n\r\n  useEffect(() => {\r\n    if(searchAverageSort){\r\n      setfilterData((prev)=>{\r\n        return {\r\n          ...prev, \r\n          average_sort : searchAverageSort\r\n        }\r\n      });\r\n    }\r\n  }, [searchAverageSort])\r\n\r\n  useEffect(() => {\r\n    let cancelTokenSource = ax.CancelToken.source();\r\n\r\n    if(showFilter === true){\r\n      set_is_list_nft_loading(true);\r\n      axios\r\n        .get(requests.filter_nftlists,{\r\n          cancelToken: cancelTokenSource.token,\r\n          params: {\r\n            ...filterData\r\n          }\r\n        })\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_list_nft_loading(false);\r\n          if (data.status === \"success\") {\r\n            dispatch(listNft(data.data));\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          if(error.message && error.message != \"manually\"){\r\n            set_is_list_nft_loading(false);\r\n          }\r\n        });\r\n\r\n    }\r\n    \r\n    if(Object.keys(filterData).length == 0){\r\n      setisFilterEnable(false)\r\n    }\r\n    else if((typeof filterData.name == 'undefined' || filterData.name == null) &&\r\n      (typeof filterData.utility == 'undefined' || filterData.utility == null) && \r\n      (typeof filterData.average == 'undefined' || (filterData.average[0] == 0 && filterData.average[1] == 100) ) && \r\n      (typeof filterData.average_sort == 'undefined' || filterData.average_sort == null)\r\n    ){\r\n      setisFilterEnable(false)\r\n    }\r\n    else if(Object.values(filterData).length > 0){\r\n      setisFilterEnable(true)\r\n    }\r\n  \r\n    return () => {\r\n      if(showFilter === true){\r\n        cancelTokenSource.cancel('manually');\r\n      }\r\n    }\r\n  }, [filterData])\r\n  \r\n  const [utilities_name, setutilities_name] = useState([]);\r\n  const utilityCheckHandler = (e) => {\r\n    // const {\r\n    //   target: { value },\r\n    // } = event;\r\n    // setutilities_name(\r\n    //   typeof value === 'string' ? value.split(',') : value,\r\n    // );\r\n    // setfilterData((prev)=>{\r\n    //   return {\r\n    //     ...prev, \r\n    //     utility : value\r\n    //   }\r\n    // });\r\n    if(e.target.checked){\r\n\r\n      setfilterData((prev)=>{\r\n          if(typeof prev.utility === 'undefined' || prev.utility == null){\r\n            return {\r\n              ...prev, \r\n              utility : [e.target.value]\r\n            }\r\n          }\r\n          else{\r\n            let utility = prev.utility;\r\n            return {\r\n              ...prev, \r\n              utility : [...utility, e.target.value]\r\n            }\r\n          }\r\n      });\r\n    }\r\n    else{\r\n      setfilterData((prev)=>{\r\n        let tempprev = prev.utility.filter((item)=>{\r\n          return e.target.value != item;\r\n        })\r\n        return {\r\n          ...prev,\r\n          utility: tempprev.length > 0 ? tempprev : null\r\n        };\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n  return (\r\n    <section className=\"nft-group-section\">\r\n      <div className=\"container-lg\">\r\n        <div className=\"row custom-newnft-row\">\r\n          <div className=\"col-xl-8\">\r\n            <div className=\"new-nft\">\r\n              <div className=\"heading\">\r\n                <h1 className=\"new-nft-heading\">\r\n                  <span><span className=\"highlight\">New</span> NFTs</span>\r\n                  <button className=\"btn btn-transparent filter-button\" onClick={()=>{\r\n                    if(showFilter) {$('.nft-filter-wrapper').slideToggle('fast')} else{setShowFilter(true)}\r\n                  }}>\r\n                    {isFilterEnable && <><span className=\"filter_active\"></span></>}\r\n                  Filters &nbsp; <i className=\"fa fa-filter\" aria-hidden=\"true\"></i></button>\r\n                </h1>\r\n              </div>\r\n\r\n              <div className=\"nft-filter-wrapper\" style={{display: 'none'}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"text-right\">\r\n                      <button className=\"cancel-filter\" onClick={()=>{ \r\n                        setShowFilter(false)\r\n                        setfilterData({})\r\n                        $('.my_custom_select_item_container input').prop('checked', false);\r\n                        setsearchAverageSort(null);\r\n                        setSearch_average([0, 100])\r\n                      }}>Reset ×</button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 mt-2\">\r\n                      <input type=\"text\" name=\"name\" id=\"search_nft_detail\" className=\"form-control\" placeholder=\"Search NFTs detail\" value={filterData.name || ''} onChange={filterChangeHandler}/>\r\n                      <div className=\"error-message\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 mt-3 mt-md-2\">\r\n                      <div className=\"my_custom_select_container\" tabIndex={999} \r\n                        onFocus={()=>{setshowMyCustomSelect(true)}}\r\n                        onBlur={()=>{setshowMyCustomSelect(false)}} >\r\n                        <input type=\"text\" name=\"utility\" id=\"search_utility\" value={filterData.utility ? filterData.utility.join(', ') : ''} className=\"form-control\"  placeholder=\"Search utility\" readOnly/>\r\n                        <div className=\"my_custom_select_item_container\" style={{display: showMyCustomSelect ? 'block': 'none'}} onClick={()=>{document.getElementById('search_utility').focus()}}>\r\n                          {\r\n                            // showMyCustomSelect ? <>\r\n                              <ul>\r\n                                {\r\n                                  utilities && utilities.map((item, index)=>{\r\n                                    return <><li key={index} value={item}>\r\n                                      <label htmlFor={item} className=\"mb-1\">\r\n                                        <input type=\"checkbox\" name=\"utilities_check[]\" id={item} value={item} onChange={utilityCheckHandler}/>\r\n                                        <label htmlFor={item} className=\"custom-check-label m-0\">{item}</label>\r\n                                      </label>\r\n\r\n                                      </li></>;\r\n                                  })\r\n                                }\r\n                              </ul>\r\n                          }\r\n                        </div>\r\n\r\n                      </div>\r\n                      \r\n                      {/* <select name=\"\" id=\"\" defaultValue={0} className=\"form-control\" name=\"utility\" id=\"search_utility\" onChange={filterChangeHandler}>\r\n                        <option value=\"0\" disabled>Select utilities</option>\r\n                        {\r\n                          utilities && utilities.map((item, index)=>{\r\n                            return <><option key={index} value={item}>{item}</option></>;\r\n                          })\r\n                        }\r\n                      </select> */}\r\n\r\n\r\n\r\n                      {/* <FormControl sx={{ m: 1, width: 300 }} style={{width:'100%'}} variant=\"standard\">\r\n                        <InputLabel id=\"demo-multiple-checkbox-label\" variant=\"standard\"><span className=\"my-custom-material-select-label\">Select utlities</span></InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-multiple-checkbox-label\"\r\n                          id=\"demo-multiple-checkbox\"\r\n                          multiple\r\n                          value={utilities_name}\r\n                          handleChange                        \r\n                          onChange={handleChange}\r\n                          input={<OutlinedInput label=\"Tag\" variant=\"standard\" className=\"text-white\" />}\r\n                          renderValue={(selected) => selected.join(', ')}\r\n                          MenuProps={MenuProps}\r\n                          className=\"my-custom-material-select\"\r\n                        >\r\n                          {utilities && utilities.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                              <Checkbox checked={utilities_name.indexOf(name) > -1} />\r\n                              <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                    </FormControl> */}\r\n\r\n\r\n                      <div className=\"error-message\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 px-1 mt-3 mt-lg-1\">\r\n                      <Typography id=\"range-slider\" className=\"mb-0\" gutterBottom style={{marginTop:'2px'}}>\r\n                        &nbsp;&nbsp;Select Range: ({search_average[0]} - {search_average[1]})\r\n                        <button id=\"sort_order_button\" className=\"btn btn-transprant text-white p-0 ml-3\" onClick={()=>{\r\n                          setsearchAverageSort((prev)=>{\r\n                            return (prev == 'high_to_low') ? 'low_to_high' : 'high_to_low'\r\n                          })\r\n                        }}>\r\n                          {searchAverageSort ?\r\n                          <>\r\n                            {searchAverageSort == 'high_to_low' ? <>\r\n                              <i className=\"fas fa-sort-amount-down\"></i>\r\n                            </> : <>\r\n                              <i className=\"fas fa-sort-amount-down-alt\"></i>\r\n                            </>}\r\n                          </>\r\n                          :<>\r\n                            <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                          </>}\r\n                          \r\n                        </button>\r\n                      </Typography>\r\n                      <Slider\r\n                        value={search_average}\r\n                        onChange={rangeSelector}\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"nft-table-wrapper\">\r\n                <div className=\"\">\r\n                  <table className=\"nft-table table table-borderless\" id=\"nft-list-table\">\r\n                    <thead id=\"nft-list-table\">\r\n                      <tr>\r\n                        <td className=\"nft-detail-col\">NFTs Details</td>\r\n                        <td>Utility</td>\r\n                        {/* <td>Popularity</td>\r\n                        <td>Community</td>\r\n                        <td>Originality</td> */}\r\n                        <td className=\"nft-detail-column\">\r\n                          Detail\r\n                        </td>\r\n                        <td>Average</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        is_list_nft_loading ? <>\r\n                          <tr>\r\n                            <td colSpan={6}>\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                            </td>\r\n                          </tr>\r\n                        </> : <>\r\n                          {list_nft && list_nft.length ? (\r\n                              \r\n                              list_nft.map((item, index) => {\r\n                                return (\r\n                                    <NftListItem data={item} key={index} />\r\n                                );\r\n                              })\r\n                            \r\n                          ) : (\r\n                            <>\r\n                              <tr>\r\n                                <td colSpan={6}>\r\n                                  <div className=\"text-center\">No record found</div>\r\n                                </td>\r\n                              </tr>\r\n                            </> \r\n                          )}\r\n                        </>\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mobile-nft-list\">\r\n\r\n                {\r\n                  is_list_nft_loading ? \r\n                  <>\r\n                    <div>\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                  </>\r\n                  :\r\n                    list_nft && list_nft.length ? (\r\n                      <>\r\n                        {list_nft.map((item, index) => {\r\n                          return (\r\n                            <div className=\"user-nft-block-mobile\" key={index}>\r\n                              <MobileNftList data={item}/>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div>\r\n                            <div className=\"text-center\">No record found</div>\r\n                        </div>\r\n                      </>\r\n                    )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"right-block\">\r\n              {(nftGraphData == null) ? <>\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br />\r\n                </div>\r\n              </> :\r\n              <>\r\n                <NftRankGraph graphData={nftGraphData}/>\r\n              </>}\r\n              <div className=\"gooogle-ads\">\r\n                <img src={assetUrl+\"images/img1.png\"} alt=\"dummy image\" />\r\n                <img src={assetUrl+\"images/img2.png\"} alt=\"dummy image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NftList;\r\n","import React from \"react\";\r\nimport { calculate_average, calculate_grade } from \"../utils/common\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport DotBar from \"./DotBar\";\r\n\r\nfunction CarouselItem({ data, ...props }) {\r\n  var nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div className=\"custom-carasol-min-height\">\r\n      <div className=\"carousel-items\">\r\n        <div className=\"item nft-block\">\r\n          <div className=\"content\">\r\n            <div className=\"row m-0\">\r\n              <div className=\"col-5 nft-info-col\">\r\n                <div className=\"nft-info\">\r\n                  <div className=\"image\">\r\n                    <a>\r\n                      <img src={nftAssetUrl + nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"nft-title\">\r\n                    <h2 className=\"highlight\">{data.nft_name}</h2>\r\n                  </div>\r\n                  <div className=\"nft-user\">\r\n                    <h3 className=\"peak\">{data.fname}</h3>\r\n                  </div>\r\n                  <div className=\"nft-redirect-btn\">\r\n                    <a href={data.nft_link} target={\"_blank\"}>\r\n                      <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-7 nft-stat-col d-flex flex-column justify-content-around\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>% NFTs Sold</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.popularity)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Social media</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.community)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Design</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.originality)}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div> */}\r\n\r\n                  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 mt-3\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.growth_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.resell_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    {/* style={{display: 'block'}} */}\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <div className=\"potential-blue-chip-graph\">\r\n                        <DotBar bars={data.potential_blue_chip} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Average</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>\r\n                      {calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CarouselItem;\r\n","import 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport React, { useRef } from \"react\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\n// import Carousel from \"react-elastic-carousel\";\r\nimport CarouselItem from \"./CarouselItem\";\r\nfunction TrendingNfts({ data, ...props }) {\r\n\r\n  if (props.is_trending_nft_loading) {\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  } else {\r\n    if (data && data.length > 0) {\r\n      var itemsPerPage = 3;\r\n      var totalPages = 3;\r\n      var carouselRef = useRef(null);\r\n      var resetTimeout;\r\n      var breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 767, itemsToShow: 2 },  \r\n        { width: 1100, itemsToShow: 3 }  \r\n      ]\r\n    }\r\n    const getTotalPage = () => {\r\n        let width = window.innerWidth;\r\n        if(width >= 1200){\r\n            return 2\r\n        }\r\n        else if(width >= 767){\r\n            return 3\r\n        }\r\n        else{\r\n            return 4\r\n        }\r\n    }\r\n\r\n    const owlresponsive = {\r\n        0 : {\r\n            items : 1\r\n        },\r\n        768 : {\r\n            items : 2\r\n        },\r\n        1200 : {\r\n            items : 3\r\n        }\r\n    };\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n              {data && data.length > 0 ? (\r\n                <>\r\n                  {/* <Carousel\r\n                    breakPoints={breakPoints}\r\n                    ref={carouselRef}\r\n                    pagination={false}\r\n                    enableAutoPlay={true}\r\n                    showArrows={false}\r\n                    itemPadding={[0, 10, 0, 10]}\r\n                    autoPlaySpeed={4000}\r\n                    onNextEnd={({ index }) => {\r\n                      clearTimeout(resetTimeout);\r\n                      if (index === getTotalPage()) {\r\n                        resetTimeout = setTimeout(() => {\r\n                          carouselRef.current.goTo(0);\r\n                        }, 3000); // same time\r\n                      }\r\n                    }}\r\n                  >\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Carousel> */}\r\n                  <OwlCarousel items={3} loop={true} autoplay={true} autoplayTimeout={4000} responsive={owlresponsive} dots={false}>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className='custom-carasol-min-height'>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </OwlCarousel>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3>No data Found</h3>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendingNfts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { trendingNft } from '../actions/index';\r\nimport NftList from '../partials/NftList';\r\nimport TrendingNfts from '../partials/TrendingNfts';\r\nimport axios from '../utils/axios';\r\nimport requests from '../utils/Requests';\r\nfunction Home() {\r\n\r\n    const trending_nft = useSelector(state => state.trendingNft)\r\n    const dispatch = useDispatch();\r\n    const [is_trending_nft_loading, set_is_trending_nft_loading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        axios.get(requests.trending_nft)\r\n            .then(response => response.data)\r\n            .then((data)=>{\r\n                set_is_trending_nft_loading(false);\r\n                if(data.status === 'success'){\r\n                    dispatch(trendingNft(data.data));\r\n                    set_is_trending_nft_loading(false);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                set_is_trending_nft_loading(false);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"main-spacing\">\r\n                <TrendingNfts data={trending_nft} is_trending_nft_loading={is_trending_nft_loading}/>\r\n                <NftList />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({ uploadImagesData, saveNftImages, deleteNftImages, validate, nftDataError, ...props }) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file mb-1' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n                <input type=\"file\" name=\"submit_nft_image\" id=\"submit_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n                <label htmlFor=\"submit_nft_image\" className='file-label'>\r\n                    <a className='form-control form-btn'>\r\n                        Choose File\r\n                    </a>\r\n                </label>\r\n        </div>\r\n        <div className=\"error-message\">{nftDataError.submit_nft_image || nftDataError.nft_image}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport UploadImageInput from '../partials/submit_nft/UploadImageInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from '../utils/Requests';\r\n\r\nvar loadingId = null;\r\nfunction SubmitNft() {\r\n    const [nftData, setNftData] = useState({});\r\n    const [nftDataError, setNftDataError] = useState({});\r\n    const [thankyou, setThankyou] = useState(false)\r\n    const [uploadImagesData, setUploadImagesData] = useState([])\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"submit_nft_image\").value = \"\";\r\n    }, [uploadImagesData])\r\n\r\n    const resetForm = () => {\r\n        document.getElementById('nft-submit-form').reset();\r\n        setNftData({});\r\n        setNftDataError({});\r\n    }\r\n\r\n    const nftSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        var flag = true;\r\n        var form = document.getElementById( 'nft-submit-form' );\r\n        var allFormControls = Array.from(form.elements);\r\n        allFormControls.forEach(element => {\r\n            if(!validate(element)){\r\n                flag = false\r\n            }\r\n        });\r\n\r\n        if(flag){\r\n            var formData = new FormData(form);\r\n            uploadImagesData.forEach((item, index) => {\r\n                formData.append(`nft_image[${index}]`, item.file);\r\n            });\r\n            loadingId = set_loading(\"Please wait...\")\r\n            document.getElementById('submit-nft-button').disabled = true;\r\n            \r\n            axios.post(requests.submit_nft, formData)\r\n                .then(response => response.data)\r\n                .then((data)=>{\r\n                    if(data.status == \"success\"){\r\n                        resolve_loading(loadingId, \"success\", data.message)\r\n                        resetForm();\r\n                        setUploadImagesData([]);\r\n                        setThankyou(true);\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error')\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    var data = error.response.data;\r\n                    if(data.status == 'validation_error' && Object.keys(data.message).length > 0 ){\r\n                        \r\n                        resolve_loading(loadingId, \"error\", 'Validation Error');\r\n                        for (var [key, value] of Object.entries(\r\n                            data.message\r\n                        )) {\r\n\r\n                            var keys = key.split('.');\r\n                            if(keys.length > 1){\r\n                                key = keys[0];\r\n                            }\r\n\r\n                            setNftDataError((prev) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [key]: value,\r\n                                };\r\n                            });\r\n                        }\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error');\r\n                    }\r\n                })\r\n                .finally(()=>{\r\n                    document.getElementById('submit-nft-button').disabled = false;\r\n                })\r\n        }\r\n    }\r\n    const saveNftData = (e) => {\r\n        if(e.target.name == \"nft_image\"){\r\n            validate(e.target)\r\n        }\r\n        setNftData((prev)=>{\r\n            if (e.target.type == \"file\") {\r\n                var value = e.target.files[0];\r\n            } else {\r\n                var value = e.target.value;\r\n            }\r\n            return {\r\n                ...prev, \r\n                [e.target.name] : (value == \"\" ? null : value)\r\n            }\r\n        })\r\n    }\r\n    const validate = (el) => {\r\n        if((\r\n            // el.name == 'fname' || \r\n            // el.name == 'lname' ||\r\n            el.name == 'eth_address' || \r\n            el.name == 'nft_name' || \r\n            el.name == 'nft_link' || \r\n            el.name == 'maximum_number_in_collection' || \r\n            el.name == 'collection_blockchain' ||\r\n            el.name == 'twitter_link' \r\n            // || el.name == 'wallet_address' \r\n        ) && el.value.trim() == \"\"){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        // else if(el.name == 'phone' && (el.value.trim()  != \"\" && !(el.value.match(/^\\d{10,12}$/))) ){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Invalid phone number'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'email' && el.value != \"\" && !(el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/))){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Invalid email format'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else if(el.name == 'email' && el.value != \"\"){\r\n            checkEmail(el.value, el.name)\r\n            return true;\r\n        }\r\n        // else if(el.name == 'nft_image' && typeof el.files[0] === 'undefined'){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Field required'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'submit_nft_image' && uploadImagesData.length <= 0){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : null\r\n                }\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n    const checkEmail = (email, field_name) => {\r\n        axios.post(requests.check_email_exist, {\r\n            email : email    \r\n        })\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [field_name] : data.message\r\n                }\r\n            })\r\n        })\r\n        .catch((error)=> {\r\n\r\n        })\r\n    }\r\n\r\n    const saveNftImages = (e) => {\r\n        if(e.target.files && e.target.files.length > 0){\r\n            setUploadImagesData((prev) => {\r\n                return [\r\n                    ...prev,\r\n                    {\r\n                        name: e.target.files[0].name,\r\n                        file: e.target.files[0]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    const deleteNftImages = (index) => {\r\n        setUploadImagesData((prev)=>{\r\n            var data = prev.filter((item, i)=>{\r\n                return index !== i\r\n            })\r\n        return data\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n                <section className=\"submit-nft\">\r\n                    <div className=\"nft-container\">\r\n                        <div className=\"container-lg\">\r\n                            <div className=\"row m-0\">\r\n                                <h4 className='submit-nft-text-message mb-3'>\r\n                                    Listings (Grading NFTs): Submit your NFT for grading, we will run your project through our algorithm and your project will be listed in 24 hours.\r\n                                    <br/> <span className='text-white'>Wallet to send ETH: 0x81f62Dc678F243251Ed734894E6bf080e58A99EB</span>\r\n                                </h4>\r\n                                <div className=\"col-12 heading p-0\">\r\n                                    <h1> <span className=\"highlight\">Submit</span> NFTs </h1>\r\n                                </div>\r\n                                <div className=\"col-lg-9 col-md-8 left-block\">\r\n                                    <div className=\"nft-form\">\r\n                                        <form onSubmit={nftSubmitHandler} method=\"post\" id=\"nft-submit-form\" encType=\"multipart/form-data\">\r\n                                            <div className=\"row m-0\">\r\n                                                <div className=\"col-lg-6 pl-lg-0 left-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About yourself</h3>\r\n                                                        </div>\r\n                                                        {/* <div className=\"full-name form-group\">\r\n                                                            <div className=\"first-name form-group\">\r\n                                                                <input type=\"text\" name=\"fname\" id=\"fname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"First Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.fname}</div>\r\n                                                            </div>\r\n                                                            <div className=\"last-name form-group\">\r\n                                                                <input type=\"text\" name=\"lname\" id=\"lname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Last Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.lname}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"tel\" name=\"phone\" id=\"phone\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Phone Number\" />\r\n                                                            <div className=\"error-message\">{nftDataError.phone}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"project_name\" id=\"project_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.project_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"email\" name=\"email\" id=\"email\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Email\" />\r\n                                                            <div className=\"error-message\">{nftDataError.email}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"opensea_link\" id=\"opensea_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Collection Link (Important)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.opensea_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"wallet_address\" id=\"wallet_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Wallet address (sent ETH from)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.wallet_address}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"twitter_link\" id=\"twitter_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Twitter\" />\r\n                                                            <div className=\"error-message\">{nftDataError.twitter_link}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"discord_link\" id=\"discord_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Discord\" />\r\n                                                            <div className=\"error-message\">{nftDataError.discord_link}</div>\r\n                                                        </div>\r\n                                                        <div className='form-group border-dashed mb-2'>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is the maximum number of items in your collection?</label>\r\n                                                            <input type=\"number\" min={1} name=\"maximum_number_in_collection\" id=\"maximum_number_in_collection\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.maximum_number_in_collection}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">How much have you sold items have you sold from your collection?</label>\r\n                                                            <input type=\"text\" name=\"item_sold\" id=\"item_sold\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.item_sold}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's blockchain?</label>\r\n                                                            <input type=\"text\" name=\"collection_blockchain\" id=\"collection_blockchain\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_blockchain}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's contract address(es)? (If available)</label>\r\n                                                            <input type=\"text\" name=\"collection_contract_address\" id=\"collection_contract_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_contract_address}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"eth_address\" id=\"eth_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"ETH Address\" />\r\n                                                            <div className=\"error-message\">{nftDataError.eth_address}</div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6 right-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About your NFTs</h3>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"nft_name\" id=\"nft_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"nft_link\" id=\"nft_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Link\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"file\" name=\"nft_image\" id=\"nft_image\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"d-none\"/>\r\n                                                            <label htmlFor=\"nft_image\" className=\"file-label form-control\"> \r\n                                                                {nftData.nft_image ? nftData.nft_image.name : \"Image\"}\r\n                                                            </label>\r\n                                                            <div className=\"error-message\">{nftDataError.nft_image}</div>\r\n                                                        </div> */}\r\n                                                        <UploadImageInput \r\n                                                            uploadImagesData={uploadImagesData}\r\n                                                            saveNftImages={saveNftImages}\r\n                                                            deleteNftImages={deleteNftImages}\r\n                                                            validate={validate}\r\n                                                            nftDataError={nftDataError}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"submit\" id=\"submit-nft-button\" className=\"form-btn nft-submit-btn\">Submit</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-3 col-md-4 right-block\">\r\n                                    <div className=\"image\">\r\n                                        <img src={assetUrl+\"images/img3.png\"} alt=\"dummy image\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* overlay for thankyou */}\r\n                {\r\n                    thankyou ? <>\r\n                        <div className=\"custom-modal d-block\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"title\">\r\n                                        <h4>Thank you</h4>\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <p>\r\n                                            We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"redirect\">\r\n                                        <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"overlay d-block\"></div>\r\n                    </> : <></>\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitNft\r\n","import React from \"react\";\r\n\r\nfunction SocialMediaInput({\r\n  addSocialMediaField,\r\n  deleteSocialMediaField,\r\n  socialMediaData,\r\n  socialMediaDataError,\r\n  upcommingNftDataError,\r\n  ...props\r\n}) {\r\n    return (\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 col-12\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  name=\"social_media\"\r\n                  id=\"social_media\"\r\n                  className=\"form-control\"\r\n                  defaultValue={\"\"}\r\n                >\r\n                  <option disabled value={\"\"}>Social media</option>\r\n                  <option value=\"twitter\">Twitter</option>\r\n                  <option value=\"discord\">Discord</option>\r\n                  <option value=\"facebook\">Facebook</option>\r\n                </select>\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media ? upcommingNftDataError.social_media : socialMediaDataError.social_media}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"social_media_link\"\r\n                  id=\"social_media_link\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Social media link\"\r\n                  // onBlur={(e) => validate(e.target)}\r\n                />\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media_link ? upcommingNftDataError.social_media_link : socialMediaDataError.social_media_link}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-12 mb-3\">\r\n              <div className=\"form-group\">\r\n                <button type=\"button\" className=\"form-btn mt-0 px-4 h-100\" onClick={addSocialMediaField}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                {\r\n                  (socialMediaData && socialMediaData.length > 0) && <>\r\n                  <div className=\"col-12\">\r\n                    <ul className=\"socialmedia-list\">\r\n                    {\r\n                      socialMediaData.map((item, index)=>{\r\n                        return (\r\n                          <>\r\n                            <li><span className=\"highlight\">{item.media}: </span> {item.media_link}  &nbsp; &nbsp;<span className=\"float-right highlight imp\" onClick={()=>{deleteSocialMediaField(index)}}><i class=\"fas fa-times\"></i></span></li>\r\n                          </>\r\n                        );\r\n                      })\r\n                    }\r\n                  </ul>\r\n              </div>\r\n                  </>\r\n                }\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialMediaInput;\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({saveNftImages, uploadImagesData, setuploadImagesData, deleteNftImages, validate, upcommingNftDataError, ...props}) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n            <input type=\"file\" name=\"upcoming_nft_image\" id=\"upcoming_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n            <label htmlFor=\"upcoming_nft_image\" className='file-label'>\r\n                <a className='form-control form-btn d-flex align-items-center'>\r\n                    Choose File\r\n                </a>\r\n            </label>\r\n        </div>\r\n        <div className=\"error-message\">{upcommingNftDataError.upcoming_nft_image || upcommingNftDataError.upcoming_nft_images}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import moment from 'moment-timezone';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport SocialMediaInput from '../partials/upcoming_nft/SocialMediaInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from \"../utils/Requests\";\r\nimport UploadImageInput from './upcoming_nft/UploadImageInput';\r\n\r\nvar loadingId = null;\r\nfunction UpcommingNftForm() {\r\n  const [startDate, setstartDate] = useState(null);\r\n  const [upcommingNftData, setupcommingNftData] = useState({});\r\n  const [upcommingNftDataError, setupcommingNftDataError] = useState({});\r\n  const [thankyou, setThankyou] = useState(false)\r\n  const [socialMediaData, setSocialMediaData] = useState([])\r\n  const [socialMediaDataError, setsocialMediaDataError] = useState({});\r\n  const [uploadImagesData, setuploadImagesData] = useState([])\r\n\r\n  // timezone select \r\n  const timezoneSelectorOptions = [];\r\n  moment.tz.names()\r\n  .reduce((memo, tz) => {\r\n    memo.push({\r\n      name: tz,\r\n      offset: moment.tz(tz).utcOffset()\r\n    });\r\n    \r\n    return memo;\r\n  }, [])\r\n  .sort((a, b) => {\r\n    return a.offset - b.offset\r\n  })\r\n  .reduce((memo, tz) => {\r\n    const timezone = tz.offset ? moment.tz(tz.name).format('Z') : '';\r\n    timezoneSelectorOptions.push({\r\n      name: tz.name,\r\n      option: `(GMT${timezone}) ${tz.name}`\r\n    })\r\n    return null;\r\n  }, \"\");\r\n\r\n  // -------------------\r\n\r\n  const saveNftData = (e) => {\r\n    setupcommingNftData((prev) => {\r\n      if (e.target.type == \"file\") {\r\n        var value = e.target.files[0];\r\n      } else {\r\n        var value = e.target.value;\r\n      }\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: value == \"\" ? null : value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n      document.getElementById('submit-upcomming-nft-form').reset();\r\n      setupcommingNftData({});\r\n      setupcommingNftDataError({});\r\n  }\r\n  const onfocusLunchTime = (e) => {\r\n    e.target.type = 'time';\r\n  }\r\n  const onblurLunchTime = (e) => {\r\n    if(e.value == \"\"){\r\n      e.type = 'text';\r\n    }\r\n    validate(e);\r\n  }\r\n\r\n  const nftUpcommingSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    var flag = true;\r\n    var form = document.getElementById(\"submit-upcomming-nft-form\");\r\n    var allFormControls = Array.from(form.elements);\r\n    allFormControls.forEach((element) => {\r\n      if (!validate(element)) {\r\n        flag = false;\r\n      }\r\n    });\r\n\r\n    if (flag) {\r\n      var formData = new FormData(form);\r\n      uploadImagesData.forEach((item, index) => {\r\n        formData.append(`upcoming_nft_images[${index}]`, item.file);\r\n      });\r\n      formData.append(`socialMediaData`, JSON.stringify(socialMediaData));\r\n      loadingId = set_loading(\"Please wait...\");\r\n      document.getElementById(\"submit-upcomming-nft-button\").disabled = true;\r\n\r\n      axios\r\n        .post(requests.submit_upcomming_nft, formData)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          if (data.status == \"success\") {\r\n            resolve_loading(loadingId, \"success\", data.message);\r\n            resetForm();\r\n            setSocialMediaData([]);\r\n            setuploadImagesData([]);\r\n            setThankyou(true);\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          var data = error.response.data;\r\n          if (data.status == \"validation_error\" && Object.keys(data.message).length > 0) {\r\n            resolve_loading(loadingId, \"error\", \"Validation Error\");\r\n            for (var [key, value] of Object.entries(data.message)) {\r\n              var keys = key.split('.');\r\n              if(keys.length > 1){\r\n                key = keys[0];\r\n              }\r\n              setupcommingNftDataError((prev) => {\r\n                // console.log(key);\r\n                // var keys = key.split('.');\r\n                // if(keys.length > 1){\r\n                //   key = keys;\r\n                // }\r\n                return {\r\n                  ...prev,\r\n                  [key]: value,\r\n                };\r\n              });\r\n            }\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          document.getElementById(\"submit-upcomming-nft-button\").disabled = false;\r\n        });\r\n    }\r\n  };\r\n  const validate = (el) => {\r\n    if (\r\n      (el.name == \"project_name\" ||\r\n        el.name == \"website\" ||\r\n        el.name == \"socialmedia\" ||\r\n        el.name == \"briefdescription\" ||\r\n        el.name == \"network\" ||\r\n        el.name == \"release_date\" ||\r\n        el.name == \"timeZoneSelect\" ||\r\n        el.name == \"release_time\") &&\r\n      (el.value.trim() == \"\" || el.value == null)\r\n    ) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"phone\" && el.value.trim() != \"\" && !el.value.match(/^\\d{10,12}$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid phone number\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"email\" && !el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid email format\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n     else if (el.name == \"nft_image\" && typeof el.files[0] === \"undefined\") {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } \r\n     else if (el.name == \"upcoming_nft_image\" && uploadImagesData.length <= 0) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n    else if((el.name == 'social_media' || el.name == 'social_media_link') && socialMediaData.length <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Field required'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else if((el.name == 'unit_price_eth' && el.value != '') && (el.value * 1) <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Minimum value should be 0'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: null,\r\n        };\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addSocialMediaField = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    if(validate_social_media()){\r\n      setSocialMediaData((prev)=>{\r\n        return [\r\n          ...prev,\r\n          {media:social_media, media_link:social_media_link}\r\n        ]\r\n      })\r\n      document.getElementById('social_media').value = \"\";\r\n      document.getElementById('social_media_link').value = \"\";\r\n    }\r\n  }\r\n  const deleteSocialMediaField = (index) => {\r\n    setSocialMediaData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  const validate_social_media = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    let [social_media_message, social_media_link_message] = [\"\", \"\"];\r\n    let flag = true;\r\n    if(social_media == \"\"){\r\n      flag = false\r\n      social_media_message = 'Field required';\r\n    }\r\n    if(social_media_link == \"\"){\r\n      flag = false\r\n      social_media_link_message = 'Field required';\r\n    }\r\n\r\n\r\n    setupcommingNftDataError({\r\n      social_media : social_media_message,\r\n      social_media_link: social_media_link_message\r\n    })\r\n    return flag\r\n  }\r\n\r\n  const saveNftImages = (e) => {\r\n    if(e.target.files && e.target.files.length > 0){\r\n      setuploadImagesData((prev) => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n  const deleteNftImages = (index) => {\r\n    setuploadImagesData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    document.getElementById(\"upcoming_nft_image\").value = \"\";\r\n  }, [uploadImagesData])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 heading p-0\">\r\n          <h1>\r\n            {\" \"}\r\n            <span className=\"highlight\">Submit</span> Upcoming NFTs{\" \"}\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-12 px-0\">\r\n          <div className=\"nft-form\">\r\n            <form\r\n              action=\"\"\r\n              method=\"post\"\r\n              id=\"submit-upcomming-nft-form\"\r\n              encType=\"multipart/form-data\"\r\n              onSubmit={nftUpcommingSubmitHandler}\r\n            >\r\n              <div className=\"row m-0\">\r\n                <div className=\"col-12 px-0\">\r\n                  <div className=\"box-modal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <div className=\"title\"><h3>About yourself</h3></div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"first-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"text\"\r\n                                  name=\"project_name\"\r\n                                  id=\"project_name\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Project name\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.project_name}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"last-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"url\"\r\n                                  name=\"website\"\r\n                                  id=\"website\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Website\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.website}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {/* <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"form-group\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"socialmedia\"\r\n                                  id=\"socialmedia\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Social Media\"\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.socialmedia}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <DatePicker\r\n                                name=\"release_date\"\r\n                                id=\"release_date\"\r\n                                className=\"form-control\"\r\n                                selected={startDate}\r\n                                onChange={(date) => {setstartDate(date)}}\r\n                                onBlur={(e) => validate(e.target)}\r\n                                minDate={new Date()}\r\n                                placeholderText=\"Launch date\"\r\n                                onChangeRaw={(e) => e.preventDefault()}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_date}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"release_time\"\r\n                                id=\"release_time\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Launch time\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => onblurLunchTime(e.target)}\r\n                                onFocus={onfocusLunchTime}\r\n                              />\r\n\r\n\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_time}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <select \r\n                                name=\"timeZoneSelect\" \r\n                                id=\"timeZoneSelect\" \r\n                                className=\"form-control\" \r\n                                onChange={saveNftData} \r\n                                onBlur={(e) => validate(e.target)}\r\n                                defaultValue={\"\"}>\r\n                                <option disabled value=\"\">Select timezone</option>\r\n                                  {\r\n                                    timezoneSelectorOptions.map((item, index)=>{\r\n                                      return <option value={item.name} key={index}>{item.option}</option>\r\n                                    })\r\n                                  }\r\n                              </select>\r\n                              <div className=\"error-message\">{upcommingNftDataError.timeZoneSelect}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"network\"\r\n                                id=\"network\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Network\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.network}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                min={0}\r\n                                step={\"any\"}\r\n                                name=\"unit_price_eth\"\r\n                                id=\"unit_price_eth\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Unit price in ETH\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.unit_price_eth}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                name=\"max_number_collection\"\r\n                                id=\"max_number_collection\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Max number in the collection\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.max_number_collection}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n\r\n                              <div className='row'>\r\n                                <SocialMediaInput\r\n                                  addSocialMediaField={addSocialMediaField}\r\n                                  deleteSocialMediaField={deleteSocialMediaField}\r\n                                  socialMediaData={socialMediaData}\r\n                                  socialMediaDataError={socialMediaDataError}\r\n                                  setsocialMediaDataError={setsocialMediaDataError}\r\n                                  upcommingNftDataError={upcommingNftDataError}\r\n                                  />\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n                              <UploadImageInput\r\n                                saveNftImages={saveNftImages}\r\n                                deleteNftImages={deleteNftImages}\r\n                                uploadImagesData={uploadImagesData}\r\n                                setuploadImagesData={setuploadImagesData}\r\n                                validate={validate}\r\n                                upcommingNftDataError={upcommingNftDataError}\r\n                              />\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                              <textarea\r\n                                name=\"briefdescription\"\r\n                                id=\"briefdescription\"\r\n                                cols=\"30\"\r\n                                rows=\"10\"\r\n                                className=\"form-control textarea\"\r\n                                placeholder=\"Description\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              ></textarea>\r\n                              <div className=\"error-message\">{upcommingNftDataError.briefdescription}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"form-btn nft-submit-btn\" id=\"submit-upcomming-nft-button\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n          thankyou ? <>\r\n              <div className=\"custom-modal d-block\">\r\n                  <div className=\"wrapper\">\r\n                      <div className=\"content\">\r\n                          <div className=\"title\">\r\n                              <h4>Thank you</h4>\r\n                          </div>\r\n                          <div className=\"icon\">\r\n                              <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                          </div>\r\n                          <div className=\"text\">\r\n                              <p>\r\n                                  We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                              </p>\r\n                          </div>\r\n                          <div className=\"redirect\">\r\n                              <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"overlay d-block\"></div>\r\n          </> : <></>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftForm;\r\n","import $ from 'jquery';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\n\r\nfunction UpcommingNftList() {\r\n  const [upcomming_nft, setupcomming_nft] = useState(false);\r\n  let upcoming_social_media = null;\r\n  useEffect(() => {\r\n    axios\r\n      .get(requests.upcomming_nft)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        setupcomming_nft(data.data);\r\n      })\r\n      .catch(function(error) {});\r\n  }, []);\r\n\r\n  // let upcoming_social_media = JSON.parse(data.socialmedia);\r\n  return (\r\n    <>\r\n      <section className=\"nft-group-section\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row custom-newnft-row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"new-nft\">\r\n                <div className=\"heading\">\r\n                  <h1>\r\n                    <span className=\"highlight\">New</span> NFTs\r\n                  </h1>\r\n                </div>\r\n                <div className=\"nft-table-wrapper d-block\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"nft-table table table-borderless text-left\" id=\"nft-list-table\">\r\n                      <thead id=\"nft-list-table\">\r\n                        <tr>\r\n                          <td>#</td>\r\n                          <td className=\"nft-detail-col\">Project name</td>\r\n                          <td>Network</td>\r\n                          <td className=\"nft-detail-column\">Launch date</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {upcomming_nft ? (\r\n                          upcomming_nft.map(function(item, index) {\r\n                              return (\r\n                                <>\r\n                                  <tr className=\"border-0\" key={uuidv4()}>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{item.project_name}</td>\r\n                                    <td>{item.network || 'NaN'}</td>\r\n                                    <td>\r\n                                      { item.release_date } { item.release_time }\r\n                                    </td>\r\n                                    <td><a className='highlight imp bold-14' \r\n                                      onClick={\r\n                                        (e)=>{\r\n                                          if(e.target.innerHTML == \"Read more\"){\r\n                                            $('#desc'+index).slideDown('fast');\r\n                                            e.target.innerHTML = \"Read less\";\r\n                                          }\r\n                                          else{\r\n                                            $('#desc'+index).slideUp('fast');\r\n                                            e.target.innerHTML = \"Read more\";\r\n                                          }\r\n                                        }\r\n                                      }\r\n                                    >Read more</a></td>\r\n                                  </tr>\r\n                                  <tr key={uuidv4()}>\r\n                                    <td colSpan={5} className=\"text-left py-0 px-2\">\r\n                                      <div id={'desc'+index} style={{display: 'none'}}>\r\n                                        <div className=\"social\">\r\n                                          <span className=\"highlight\"> Social media: </span>\r\n                                            {\r\n                                              (item.socialmedia) ?  \r\n                                                JSON.parse(item.socialmedia).map((item, index) => {\r\n                                                    return <a href={item.media_link} key={uuidv4()} target=\"_blank\" rel=\"noopener noreferrer\" className={item.media}><i className={\"fab fa-\"+item.media}></i></a>\r\n                                                })\r\n                                              :<></>\r\n                                            }\r\n                                            {/* <span className=\"font-weight-normal\"> {item.socialmedia} </span> */}\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Description: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.briefdescription} </span>\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Unit price eth: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.unit_price_eth || 'NaN'} </span>\r\n                                        </div>\r\n                                        <div className='nft-images'>\r\n                                              {\r\n                                                (item.images) ?\r\n                                                  <>\r\n                                                  <span className='highlight'>Images: </span>\r\n                                                    <div>\r\n                                                  {\r\n                                                    JSON.parse(item.images).map((item, index)=>{\r\n                                                      return <a href={nftAssetUrl+item} key={uuidv4()} target={\"_blank\"}>\r\n                                                              <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"100px\" className='mr-2' />\r\n                                                          </a>\r\n                                                    })\r\n                                                  }\r\n                                                  </div>\r\n                                                  </>\r\n                                                  :<></>\r\n                                              }\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })\r\n                        ) : (\r\n                            <tr key={uuidv4()}>\r\n                              <td colSpan={5}>\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mobile-nft-list\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftList;\r\n","import React from 'react'\r\nimport UpcommingNftForm from '../partials/UpcommingNftForm'\r\nimport UpcommingNftList from '../partials/UpcommingNftList'\r\n\r\nfunction UpcommingNft() {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n            <section className=\"submit-nft\">\r\n                <div className=\"nft-container\">\r\n                    <div className=\"container-lg\">\r\n                        <UpcommingNftForm />\r\n                        <UpcommingNftList />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpcommingNft\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from '../partials/Footer';\r\nimport Header from '../partials/Header';\r\nimport CompareNfts from './CompareNfts';\r\nimport ContactUs from './ContactUs';\r\nimport Home from './Home';\r\nimport SubmitNft from './SubmitNft';\r\nimport UpcommingNft from './UpcommingNft';\r\n\r\nfunction Main() {\r\n\r\n    let location = useLocation();\r\n    let [myRoute, setMyRoute] = useState(null)\r\n    useEffect(()=>{\r\n        setMyRoute(location.pathname)\r\n    }, [location])\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header route={myRoute}/>\r\n                \r\n            <Route exact path=\"/test\">\r\n                <CompareNfts/>\r\n            </Route>\r\n            <Route exact path=\"/submit-nft\">\r\n                <SubmitNft/>\r\n            </Route>\r\n            <Route exact path=\"/upcomming-nft\">\r\n                <UpcommingNft/>\r\n            </Route>\r\n            <Route exact path=\"/contact-us\">\r\n                <ContactUs/>\r\n            </Route>\r\n            <Route exact path=\"/compare-nft\">\r\n                <CompareNfts/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n                <Home/>\r\n            </Route>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header />\r\n            <div className=\"admin-container\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"page-404-error text-center\">\r\n                        <div className=\"error\">\r\n                            <h1 className=\"display-1 font-weight-bold\">404</h1>\r\n                            <h2 className=\"peak text-uppercase\">Seems you are lost !</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","const listNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_LIST_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listNft;\r\n","const trendingNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TRENDING_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default trendingNft;\r\n","import { combineReducers } from \"redux\";\r\nimport listNft from \"./listNft\";\r\n// import defaultJobReducere from \"./defaultJob\";\r\n// import updateCounter from \"./updateCounter\";\r\nimport trendingNft from \"./trendingNft\";\r\nconst allReducres = combineReducers({\r\n    trendingNft: trendingNft,\r\n    listNft: listNft\r\n});\r\n\r\nexport default allReducres;\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport './App.css';\nimport Main from \"./pages/Main\";\nimport NoMatch from './partials/NoMatch';\nimport allReducres from \"./reducers\";\nconst store = createStore(\n  allReducres,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\nfunction App() {\n  \n\n\n  return (\n    <Provider store={store}>\n      \n      <Router>\n        {/* <Test/> */}\n        <Switch >\n          \n          \n          <Route exact path={[\"/\", \"/submit-nft\", \"/upcomming-nft\", \"/contact-us\", \"/test\", \"/compare-nft\"]}>\n            <Main/> \n          </Route>\n          <Route path=\"*\">\n              <NoMatch />\n          </Route>\n\n        </Switch >\n\n\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}