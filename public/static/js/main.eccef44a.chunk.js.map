{"version":3,"sources":["partials/Footer.js","utils/constant.js","partials/Header.js","partials/nft_compare/CompareResult.js","partials/nft_compare/First_Nft_Search.js","partials/nft_compare/First_Result.js","partials/nft_compare/GraphDuration.js","partials/nft_compare/NftComparisionGraph.js","partials/nft_compare/Second_Nft_Search.js","partials/nft_compare/Second_Result.js","utils/axios.js","utils/Requests.js","pages/CompareNfts.js","pages/ContactUs.js","actions/index.js","utils/common.js","partials/DotBar.js","partials/MobileNftList.js","partials/NftListItem.js","partials/NftRankGraph.js","partials/NftList.js","partials/CarouselItem.js","partials/TrendingNfts.js","pages/Home.js","partials/submit_nft/UploadImageInput.js","pages/SubmitNft.js","partials/upcoming_nft/SocialMediaInput.js","partials/upcoming_nft/UploadImageInput.js","partials/UpcommingNftForm.js","partials/UpcommingNftList.js","pages/UpcommingNft.js","pages/Main.js","partials/NoMatch.js","reducers/listNft.js","reducers/trendingNft.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","target","assetUrl","nftAssetUrl","serverUrl","Header","_ref","route","Fragment","react_router_dom","to","src","alt","width","height","CompareResult","firstSelectedCoinDetail","secondSelectedCoinDetail","_useState","useState","_useState2","Object","slicedToArray","compareResult","setcompareResult","useEffect","stats","secondSelectedCoinDetail_stats_ceiling","ceiling","secondSelectedCoinDetail_stats_average","average","secondSelectedCoinDetail_stats_volume","volume","secondSelectedCoinDetail_stats_totalSales","totalSales","firstSelectedCoinDetail_stats_ceiling","firstSelectedCoinDetail_stats_average","firstSelectedCoinDetail_stats_volume","firstSelectedCoinDetail_stats_totalSales","market_cap_percentage","average_percentage","volume_percentage","totalSales_percentage","title","name","market_cap","Math","abs","toFixed","Infinity","isNaN","First_Nft_Search","firstCoin","setfirstCoin","setfirstSelectedCoin","firstSelectedCoin","firstSearchList","setfirstSearchList","objectWithoutProperties","showfirstlist","setshowfirstlist","tabIndex","onFocus","onBlur","type","id","value","placeholder","onChange","e","autoComplete","style","display","edges","length","map","item","index","key","onClick","address","node","unsafeOpenseaImageUrl","symbol","First_Result","isFirstDeatilLoading","floor","GraphDuration","firstNftGraphDataLoading","secondNftGraphDataLoading","graphDuration","setgraphDuration","hide_option_container","document","getElementById","readOnly","ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","NftComparisionGraph","firstNftGraphData","secondNftGraphData","getOrCreateTooltip","chart","tooltipEl","canvas","parentNode","querySelector","background","borderRadius","color","opacity","pointerEvents","position","transform","transition","table","margin","appendChild","dataset","labels","push","label","data","fill","backgroundColor","borderColor","customData","tooltip","borderWidth","pointRadius","pointHoverRadius","x_axis","datasets","options","plugins","enabled","external","context","body","titleLines","bodyLines","b","lines","tableHead","forEach","tr","th","text","createTextNode","tableBody","i","labelColors","td","innerHTML","fontSize","tableRoot","firstChild","remove","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","left","caretX","top","caretY","font","bodyFont","string","padding","callbacks","dataIndex","scales","y","beginAtZero","index_modern","Second_Nft_Search","secondCoin","setsecondCoin","setsecondSelectedCoin","secondSelectedCoin","secondSearchList","setsecondSearchList","showsecondlist","setshowsecondlist","Second_Result","isSecondDeatilLoading","axios","defaults","headers","common","instance","create","baseURL","requests","all","trending_nft","submit_nft","do_like","check_email_exist","tranding_chart","upcomming_nft","submit_upcomming_nft","get_utilities","filter_nftlists","search_nft","get_nft_detail","get_nft_history","CompareNfts","myclient","_useState3","_useState4","_useState5","_useState6","setfirstSelectedCoinDetail","_useState7","_useState8","_useState9","_useState10","setisFirstDeatilLoading","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setsecondSelectedCoinDetail","_useState17","_useState18","_useState19","_useState20","setisSecondDeatilLoading","firstCoinTimeout","secondCoinTimeout","_useState21","_useState22","setfirstNftGraphData","_useState23","_useState24","setfirstNftGraphDataLoading","_useState25","_useState26","setsecondNftGraphData","_useState27","_useState28","setsecondNftGraphDataLoading","_useState29","_useState30","nftdeatilCancelSourceFirst","setnftdeatilCancelSourceFirst","_useState31","_useState32","nftdeatilCancelSourceSecond","setnftdeatilCancelSourceSecond","_useState33","_useState34","get_search_data","_ref2","asyncToGenerator","regenerator_default","mark","_callee","param","callback","result","wrap","_context","prev","next","post","then","contracts","catch","error","abrupt","stop","_x","_x2","apply","this","arguments","get_selected_nft_details","loading_callback","callback2","loading_callback2","setCancelToken","cancelTokenSource1","ax","CancelToken","source","cancelTokenSource2","cancelToken","token","duration","response","setTimeout","clearTimeout","console","log","element","cancel","action","method","nft_compare_First_Nft_Search","temp","nft_compare_Second_Nft_Search","nft_compare_First_Result","nft_compare_CompareResult","nft_compare_Second_Result","nft_compare_GraphDuration","nft_compare_NftComparisionGraph","ContactUs","trendingNft","payload","undefined","listNft","set_loading","message","toast","loading","resolve_loading","status","update","render","isLoading","autoClose","closeButton","calculate_average","popularity","originality","community","growth_evaluation","resell_evaluation","potential_blue_chip","parseInt","calculate_grade","score","DotBar","bars","item_fill","liked","JSON","parse","localStorage","getItem","MobileNftList","nft_images","image","nft_name","fname","nft_link","preventDefault","$","slideDown","slideUp","total_likes","includes","totalLike","setItem","stringify","elm","getElementsByClassName","closest","getElementsByTagName","classList","add","elm2","addLike","partials_DotBar","twitter_link","rel","discord_link","collection_blockchain","maximum_number_in_collection","NftListItem","uniquekey","uuidv4","utility","colSpan","BarElement","NftRankGraph","graphData","months","likes","hoverBackgroundColor","stack","responsive","interaction","intersect","x","stacked","grid","size","ticks","NftList","list_nft","useSelector","state","dispatch","useDispatch","is_list_nft_loading","set_is_list_nft_loading","set_is_graph_nft_loading","nftGraphData","setNftGraphData","searchAverageSort","setsearchAverageSort","search_average","setSearch_average","filterData","setfilterData","utilities","setutilities","showFilter","setShowFilter","showMyCustomSelect","setshowMyCustomSelect","isFilterEnable","setisFilterEnable","get","objectSpread","average_sort","cancelTokenSource","params","keys","values","slideToggle","aria-hidden","prop","defineProperty","join","focus","htmlFor","checked","concat","toConsumableArray","tempprev","filter","Typography","gutterBottom","marginTop","class","Slider","event","newValue","valueLabelDisplay","partials_NftListItem","partials_MobileNftList","partials_NftRankGraph","CarouselItem","TrendingNfts","is_trending_nft_loading","useRef","OwlCarousel_default","items","loop","autoplay","autoplayTimeout","0","768","1200","dots","partials_CarouselItem","Home","set_is_trending_nft_loading","partials_TrendingNfts","partials_NftList","UploadImageInput","uploadImagesData","saveNftImages","deleteNftImages","validate","nftDataError","accept","submit_nft_image","nft_image","loadingId","SubmitNft","setNftData","setNftDataError","thankyou","setThankyou","setUploadImagesData","saveNftData","files","el","trim","match","checkEmail","email","field_name","onSubmit","flag","form","Array","from","elements","formData","FormData","append","file","disabled","reset","_i","_Object$entries","entries","split","finally","encType","project_name","opensea_link","min","item_sold","collection_contract_address","submit_nft_UploadImageInput","SocialMediaInput","addSocialMediaField","deleteSocialMediaField","socialMediaData","socialMediaDataError","upcommingNftDataError","defaultValue","social_media","social_media_link","media","media_link","setuploadImagesData","upcoming_nft_image","upcoming_nft_images","UpcommingNftForm","startDate","setstartDate","setupcommingNftData","setupcommingNftDataError","setSocialMediaData","setsocialMediaDataError","timezoneSelectorOptions","moment","tz","names","reduce","memo","offset","utcOffset","sort","timezone","format","option","validate_social_media","social_media_message","social_media_link_message","website","react_datepicker_min_default","selected","date","minDate","Date","placeholderText","onChangeRaw","release_date","onblurLunchTime","release_time","timeZoneSelect","network","step","unit_price_eth","max_number_collection","upcoming_nft_SocialMediaInput","upcoming_nft_UploadImageInput","cols","rows","briefdescription","UpcommingNftList","setupcomming_nft","socialmedia","images","UpcommingNft","partials_UpcommingNftForm","partials_UpcommingNftList","Main","location","useLocation","myRoute","setMyRoute","pathname","partials_Header","react_router","exact","path","pages_SubmitNft","pages_UpcommingNft","pages_ContactUs","pages_CompareNfts","pages_Home","react_toastify_esm","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","partials_Footer","NoMatch","allReducres","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","pages_Main","partials_NoMatch","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App"],"mappings":"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","file":"static/js/main.eccef44a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"gemstool-footer\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"credits\">\r\n                        <div className=\"copyright\">\r\n                            <span>Copyright 2022 | Gems Tools</span>\r\n                        </div>\r\n                        <div className=\"developed\">\r\n                            <span>Designed and Developed by <a href=\"https://qalbit.com/\" target=\"_blank\"> QalbIT Solution </a> </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","\r\nexport const baseUrl = \"https://gems.tools/\";\r\nexport const assetUrl = \"https://gems.tools/\";\r\nexport const serverUrl = \"https://gems.tools/\";\r\nexport const nftAssetUrl = serverUrl+\"storage/images/nftimages/\";\r\n\r\n\r\n\r\nexport const graphql_endpoint = \"https://graphql.icy.tools/graphql\";\r\n\r\n// const client = new ApolloClient({ link: new HttpLink({ uri: '/graphql', fetch })});    \")\r\n\r\n//http://dev.qalbit.com/gemstools/\r\n// -> Local : storage/images/nftimages/\r\n// -> Live: storage/app/public/images/nftimages/\r\n\r\n// Favicon : https://dev.qalbit.com/gemstools/images/favicon.png\r\n/*\r\n    replace {{asset('images')}}/favicon.png in favicon in welcome.blade.php\r\n*/","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { assetUrl } from '../utils/constant';\r\nfunction Header({route}) {\r\n    return (\r\n\r\n        <>\r\n        <header>\r\n            <nav className=\"head-nav\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"brand-logo\">\r\n                            <Link to=\"/app\"><img src={assetUrl+\"images/gemstool-logo.png\"} alt=\"NFTs Grades image\" width=\"180px\" height=\"46px\" /></Link>\r\n                        </div>\r\n                        <div className=\"nav-links\">\r\n                            <div className=\"hemburger\">\r\n                                <button >\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"nav-links\">\r\n                                <ul className=\"user-list\">\r\n                                    <li>\r\n                                        <Link to=\"/app/compare-nft\" className={(route == '/app/compare-nft') ? 'active' : ''}>Compare NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/app/upcomming-nft\" className={(route == '/app/upcomming-nft') ? 'active' : ''}>Upcoming NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/app/submit-nft\" className={(route == '/app/submit-nft') ? 'active' : ''}>Submit NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/app/contact-us\" className={(route == '/app/contact-us') ? 'active' : ''}>Contact us</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mobile-nav\">\r\n                            <ul className=\"mobile-userlist\">\r\n                                <li>\r\n                                    <Link to=\"/app/compare-nft\">Compare NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/app/submit-nft\">Submit NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/app/upcomming-nft\">Upcoming NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/app/contact-us\">Contact us</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CompareResult({ firstSelectedCoinDetail, secondSelectedCoinDetail }) {\r\n  const [compareResult, setcompareResult] = useState(null);\r\n  useEffect(() => {\r\n    if (firstSelectedCoinDetail != null && secondSelectedCoinDetail != null) {\r\n\r\n        if(secondSelectedCoinDetail.stats){\r\n            var secondSelectedCoinDetail_stats_ceiling = secondSelectedCoinDetail.stats.ceiling\r\n            var secondSelectedCoinDetail_stats_average = secondSelectedCoinDetail.stats.average\r\n            var secondSelectedCoinDetail_stats_volume = secondSelectedCoinDetail.stats.volume\r\n            var secondSelectedCoinDetail_stats_totalSales = secondSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            // var market_cap_percentage = 0;\r\n            // var average_percentage = 0;\r\n            // var volume_percentage = 0;\r\n            // var totalSales_percentage = 0;\r\n            var secondSelectedCoinDetail_stats_ceiling = 0;\r\n            var secondSelectedCoinDetail_stats_average = 0;\r\n            var secondSelectedCoinDetail_stats_volume = 0;\r\n            var secondSelectedCoinDetail_stats_totalSales = 0;\r\n        }\r\n\r\n        if(firstSelectedCoinDetail.stats){\r\n            var firstSelectedCoinDetail_stats_ceiling = firstSelectedCoinDetail.stats.ceiling\r\n            var firstSelectedCoinDetail_stats_average = firstSelectedCoinDetail.stats.average\r\n            var firstSelectedCoinDetail_stats_volume = firstSelectedCoinDetail.stats.volume\r\n            var firstSelectedCoinDetail_stats_totalSales = firstSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            var firstSelectedCoinDetail_stats_ceiling = 0\r\n            var firstSelectedCoinDetail_stats_average = 0\r\n            var firstSelectedCoinDetail_stats_volume = 0\r\n            var firstSelectedCoinDetail_stats_totalSales = 0\r\n        }\r\n\r\n        var market_cap_percentage = (secondSelectedCoinDetail_stats_ceiling || 0) > (firstSelectedCoinDetail_stats_ceiling || 0) ? \r\n            ((secondSelectedCoinDetail_stats_ceiling || 0) / (firstSelectedCoinDetail_stats_ceiling || 0)) :\r\n            ((firstSelectedCoinDetail_stats_ceiling || 0) / (secondSelectedCoinDetail_stats_ceiling || 0));\r\n        var average_percentage = (secondSelectedCoinDetail_stats_average || 0) > (firstSelectedCoinDetail_stats_average || 0) ? \r\n            ((secondSelectedCoinDetail_stats_average || 0) / (firstSelectedCoinDetail_stats_average || 0)) :\r\n            ((firstSelectedCoinDetail_stats_average || 0) / (secondSelectedCoinDetail_stats_average || 0));\r\n        var volume_percentage = (secondSelectedCoinDetail_stats_volume || 0) > (firstSelectedCoinDetail_stats_volume || 0) ? \r\n            ((secondSelectedCoinDetail_stats_volume || 0) / (firstSelectedCoinDetail_stats_volume || 0)) :\r\n            ((firstSelectedCoinDetail_stats_volume || 0) / (secondSelectedCoinDetail_stats_volume || 0));\r\n        var totalSales_percentage = (secondSelectedCoinDetail_stats_totalSales || 0) > (firstSelectedCoinDetail_stats_totalSales || 0) ? \r\n            ((secondSelectedCoinDetail_stats_totalSales || 0) / (firstSelectedCoinDetail_stats_totalSales || 0)) :\r\n            ((firstSelectedCoinDetail_stats_totalSales || 0) / (secondSelectedCoinDetail_stats_totalSales || 0));\r\n\r\n      setcompareResult({\r\n        title: [firstSelectedCoinDetail.name, secondSelectedCoinDetail.name],\r\n        market_cap: secondSelectedCoinDetail_stats_ceiling - firstSelectedCoinDetail_stats_ceiling,\r\n        market_cap_percentage: market_cap_percentage,\r\n        average: secondSelectedCoinDetail_stats_average - firstSelectedCoinDetail_stats_average,\r\n        average_percentage: average_percentage,\r\n        volume: secondSelectedCoinDetail_stats_volume - firstSelectedCoinDetail_stats_volume,\r\n        volume_percentage: volume_percentage,\r\n        totalSales: secondSelectedCoinDetail_stats_totalSales - firstSelectedCoinDetail_stats_totalSales,\r\n        totalSales_percentage: totalSales_percentage,\r\n      });\r\n    } else {\r\n      setcompareResult(null);\r\n    }\r\n    return () => {};\r\n  }, [firstSelectedCoinDetail, secondSelectedCoinDetail]);\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [compareResult])\r\n  \r\n//   tubby cats by tubby collective\r\n  return (\r\n    <div className=\"result-box\">\r\n        {\r\n            compareResult != null ? \r\n            <>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"box-wrapper\">\r\n                        <div className=\"header diff-head\">\r\n                        <div className=\"small-heading\">Difference</div>\r\n                        <h3 className=\"heading\">\r\n                            <span className=\"nft-name\">{compareResult.title[0]}</span><span className=\"highlight\">vs</span><span className=\"nft-name\">{compareResult.title[1]}</span>\r\n                        </h3>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                        <div className=\"stats diff-stats\">\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Market Cap</div>\r\n                            <div className=\"number\">\r\n                                {\r\n                                    compareResult.market_cap < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">\r\n                                            {Math.abs(compareResult.market_cap).toFixed(2)}\r\n                                            <small>({ (compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage)) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small>\r\n                                        </span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.market_cap).toFixed(2)} <small>({compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item br-none\">\r\n                            <div className=\"title\">Average</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.average < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Volume</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.volume < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Sale</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.totalSales < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            :\r\n            <></>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareResult;\r\n","import React, { useState } from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction First_Nft_Search({\r\n    firstCoin,\r\n    setfirstCoin,\r\n    firstSelectedCoin,\r\n    setfirstSelectedCoin,\r\n    firstSearchList,\r\n    setfirstSearchList, ...prop\r\n}) {\r\n    const [showfirstlist, setshowfirstlist] = useState(false);\r\n  return (\r\n    <div className=\"form-group nft-search-container\"\r\n        \r\n    >\r\n      <label>Select A</label>\r\n      <div  tabIndex={1} \r\n        onFocus={()=>{\r\n          setshowfirstlist(true)\r\n        }}\r\n        onBlur={()=>{\r\n            setshowfirstlist(false)\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_a\"\r\n          id=\"select_a\"\r\n          value={firstCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setfirstCoin(null);\r\n            } else {\r\n              setfirstCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n        <div className=\"nft-search-result-container first\" style={{ display: (firstSearchList == null || !showfirstlist) ? \"none\" : \"block\" }}>\r\n          { firstSearchList != null ? (\r\n            <>\r\n              {firstSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">\r\n                        Loading...\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    \r\n                  {\r\n                    firstSearchList.edges.length > 0 ? <>\r\n                      {firstSearchList.edges.map((item, index) => {\r\n                        return (\r\n                          <li key={index} onClick={(e)=>{\r\n                            setfirstSelectedCoin({\r\n                                address: item.node.address\r\n                            })\r\n                            setshowfirstlist(false)\r\n                            setfirstCoin(item.node.name);\r\n\r\n                          }}>\r\n                            <span className=\"detail\">\r\n                              <span className=\"image\"><img src={item.node.unsafeOpenseaImageUrl || (assetUrl + \"images/user-dp.png\")} alt={item.node.name} /></span>\r\n                              <span>{item.node.name}</span> <span className=\"code\">{item.node.symbol}</span>\r\n                            </span>\r\n                            \r\n                          </li>\r\n                          \r\n                        );\r\n                      })}\r\n                    </> :\r\n                    <>\r\n                      <li>\r\n                        <div className=\"detail\">No record found.</div>\r\n                      </li>\r\n                    </>\r\n                  }\r\n                    \r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction First_Result({firstSelectedCoinDetail,isFirstDeatilLoading}) {\r\n\r\n    if(isFirstDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n    if(firstSelectedCoinDetail == null || firstSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        );   \r\n    }\r\n  return (\r\n    <div className=\"result-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {firstSelectedCoinDetail && firstSelectedCoinDetail.unsafeOpenseaImageUrl  ? (\r\n                <>\r\n                  <img src={firstSelectedCoinDetail.unsafeOpenseaImageUrl} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats ? firstSelectedCoinDetail.stats.floor.toFixed(2) : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Result;\r\n","import React, { useEffect } from 'react'\r\n\r\nconst GraphDuration = ({\r\n    firstNftGraphDataLoading,\r\n    secondNftGraphDataLoading,\r\n    graphDuration,\r\n    setgraphDuration\r\n}) => {\r\n    const graphDurationChangeHandler = (e) => {\r\n        setgraphDuration(e.target.value)\r\n    }\r\n    const show_option_container = (e) => {\r\n        document.getElementById('option-container').style.display = 'block';\r\n    }\r\n    const hide_option_container = (e) => {\r\n        document.getElementById('option-container').style.display = 'none';\r\n    }\r\n\r\n    useEffect(() => {\r\n        hide_option_container();\r\n    }, [graphDuration])\r\n    \r\n\r\n  return (\r\n    <div className='graph-duration-container'>\r\n        {/* <button \r\n            className={graphDuration == \"hourly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('hourly')\r\n            }}>Hourly</button>\r\n        <button \r\n            className={graphDuration == \"weekly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('weekly')\r\n            }}>Weekly</button>\r\n        <button \r\n            className={graphDuration == \"monthly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('monthly')\r\n            }}>Monthly</button> */}\r\n\r\n        {/* <select name=\"\" id=\"\" \r\n            defaultValue={'hourly'} \r\n            value={graphDuration}\r\n            onChange={graphDurationChangeHandler}\r\n        >\r\n            <option value=\"Hourly\">Hourly</option>\r\n            <option value=\"Weekly\">Weekly</option>\r\n            <option value=\"Monthly\">Monthly</option>\r\n        </select> */}\r\n        <div className='graph-duration-content'>\r\n            <span className='title'>History: </span>\r\n            <span tabIndex={9998}\r\n                className=\"graph-duration-wrapper\"\r\n                onFocus={()=>{\r\n                    show_option_container()\r\n                }}\r\n                onBlur={()=>{\r\n                    hide_option_container()\r\n                }}\r\n            >\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"\" \r\n                    id=\"\" \r\n                    readOnly \r\n                    placeholder='Select'\r\n                    value={graphDuration}\r\n                    \r\n                />\r\n                <div id='option-container'>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Hourly');hide_option_container()}}>Hourly</span>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Week');hide_option_container()}}>Week</span>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Month');hide_option_container()}}>Month</span>\r\n                </div>\r\n\r\n            </span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GraphDuration","import { CategoryScale, Chart as ChartJS, LinearScale, LineElement, PointElement, Title, Tooltip } from \"chart.js\";\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip);\r\n\r\nfunction NftComparisionGraph({\r\n  firstNftGraphData,\r\n  secondNftGraphData,\r\n  firstNftGraphDataLoading,\r\n  secondNftGraphDataLoading,\r\n  firstSelectedCoinDetail,\r\n  secondSelectedCoinDetail,\r\n}) {\r\n  if (firstNftGraphDataLoading || secondNftGraphDataLoading) {\r\n    return (\r\n      <>\r\n        <div className=\"std-loading-design\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // ------------------------------\r\n\r\n  // tooltip custom function\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const { chart, tooltip } = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n\r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n\r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map((b) => b.lines);\r\n\r\n      const tableHead = document.createElement(\"thead\");\r\n\r\n      titleLines.forEach((title) => {\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.borderWidth = 0;\r\n\r\n        const th = document.createElement(\"th\");\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n\r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n\r\n      const tableBody = document.createElement(\"tbody\");\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.backgroundColor = \"inherit\";\r\n        tr.style.borderWidth = 0;\r\n\r\n        const td = document.createElement(\"td\");\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement(\"div\");\r\n        text.innerHTML = body.length > 0 ? body[0] : '';\r\n        td.style.fontSize = \"11px\";\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n\r\n      const tableRoot = tooltipEl.querySelector(\"table\");\r\n\r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n\r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n\r\n    const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\r\n\r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + \"px\";\r\n    tooltipEl.style.top = positionY + tooltip.caretY + \"px\";\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + \"px \" + tooltip.options.padding + \"px\";\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector(\"div\");\r\n\r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement(\"div\");\r\n      tooltipEl.style.background = \"rgba(0, 0, 0, 0.7)\";\r\n      tooltipEl.style.borderRadius = \"3px\";\r\n      tooltipEl.style.color = \"white\";\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = \"none\";\r\n      tooltipEl.style.position = \"absolute\";\r\n      tooltipEl.style.transform = \"translate(-50%, 0)\";\r\n      tooltipEl.style.transition = \"all .1s ease\";\r\n\r\n      const table = document.createElement(\"table\");\r\n      table.style.margin = \"0px\";\r\n      table.style.width = \"100px\";\r\n\r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n\r\n    return tooltipEl;\r\n  };\r\n  // ----------------------\r\n\r\n  let dataset = [];\r\n  var labels = null;\r\n  if (secondNftGraphData) {\r\n    dataset.push({\r\n      label: secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : null,\r\n      data: secondNftGraphData && secondNftGraphData.average ? secondNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"#742774\",\r\n      borderColor: \"#742774\",\r\n      customData: secondNftGraphData.tooltip,\r\n      borderWidth: 2,\r\n      pointRadius: 2,\r\n      pointHoverRadius: 5\r\n    });\r\n    labels = secondNftGraphData.x_axis;\r\n  }\r\n  if (firstNftGraphData) {\r\n    dataset.push({\r\n      label: firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : null,\r\n      data: firstNftGraphData && firstNftGraphData.average ? firstNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n      customData: firstNftGraphData.tooltip,\r\n      borderWidth: 2,\r\n      pointRadius: 2,\r\n      pointHoverRadius: 5\r\n    });\r\n    labels = firstNftGraphData && firstNftGraphData.x_axis ? firstNftGraphData.x_axis : null;\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: dataset,\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      tooltip: {\r\n        enabled: false,\r\n        position: \"nearest\",\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NftComparisionGraph;\r\n","import React, { useState } from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction Second_Nft_Search({\r\n  secondCoin,\r\n  setsecondCoin,\r\n  secondSelectedCoin,\r\n  setsecondSelectedCoin,\r\n  secondSearchList,\r\n  setsecondSearchList,\r\n  ...prop\r\n}) {\r\n  const [showsecondlist, setshowsecondlist] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"form-group nft-search-container\"\r\n    >\r\n      <label>Select B</label>\r\n\r\n      <div\r\n        tabIndex={1}\r\n        onFocus={() => {\r\n          setshowsecondlist(true);\r\n        }}\r\n        onBlur={() => {\r\n          setshowsecondlist(false);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_b\"\r\n          id=\"select_b\"\r\n          value={secondCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setsecondCoin(null);\r\n            } else {\r\n              setsecondCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <div\r\n          className=\"nft-search-result-container second\"\r\n          style={{ display: secondSearchList == null || !showsecondlist ? \"none\" : \"block\" }}\r\n        >\r\n          {secondSearchList != null ? (\r\n            <>\r\n              {secondSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">Loading...</div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    {secondSearchList.edges.length > 0 ? (\r\n                      <>\r\n                        {secondSearchList.edges.map((item, index) => {\r\n                          return (\r\n                            <li\r\n                              key={index}\r\n                              onClick={(e) => {\r\n                                setsecondSelectedCoin({\r\n                                  address: item.node.address,\r\n                                });\r\n                                setshowsecondlist(false);\r\n                                setsecondCoin(item.node.name);\r\n                              }}\r\n                            >\r\n                              <span className=\"detail\">\r\n                                <span className=\"image\"><img src={item.node.unsafeOpenseaImageUrl || (assetUrl + \"images/user-dp.png\")} alt={item.node.name} /></span>\r\n                                <span>{item.node.name}</span> <span className=\"code\">{item.node.symbol}</span>\r\n                              </span>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          <div className=\"detail\">No record found.</div>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction Second_Result({secondSelectedCoinDetail,isSecondDeatilLoading}) {\r\n\r\n    if(isSecondDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n    }\r\n    if(secondSelectedCoinDetail == null || secondSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        ); \r\n    }\r\n  return (\r\n    <div className=\"result-box last-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {secondSelectedCoinDetail && secondSelectedCoinDetail.unsafeOpenseaImageUrl ? (\r\n                <>\r\n                  <img src={secondSelectedCoinDetail.unsafeOpenseaImageUrl} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.floor.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Result;\r\n","import axios from \"axios\";\r\n// http://192.168.1.7:8000\r\n// http://dev.qalbit.com/gemstools\r\n// https://gems.tools\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\nconst instance = axios.create({\r\n    baseURL: \"https://gems.tools\"\r\n});\r\n\r\nexport default instance","const requests = {\r\n    all: `/api/nftlists`,\r\n    trending_nft : `/api/trendingnft`,\r\n    submit_nft: `/api/submit-nft`,\r\n    do_like: `/api/do-like`,\r\n    check_email_exist: `/api/checkemail`,\r\n    tranding_chart: `/api/graphdata`,\r\n    upcomming_nft: `/api/upcomingnft`,\r\n    submit_upcomming_nft: `/api/add-upcoming-nft`,\r\n    get_utilities: `/api/utilities`,\r\n    filter_nftlists: `/api/filter_nftlists`,\r\n    search_nft: `/api/search-nft`,\r\n    get_nft_detail: `/api/get-nft-detail`,\r\n    get_nft_history: `/api/get-nft-history`,\r\n}\r\nexport default requests;","import ax from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CompareResult from '../partials/nft_compare/CompareResult';\r\nimport First_Nft_Search from '../partials/nft_compare/First_Nft_Search';\r\nimport First_Result from '../partials/nft_compare/First_Result';\r\nimport GraphDuration from '../partials/nft_compare/GraphDuration';\r\nimport NftComparisionGraph from '../partials/nft_compare/NftComparisionGraph';\r\nimport Second_Nft_Search from '../partials/nft_compare/Second_Nft_Search';\r\nimport Second_Result from '../partials/nft_compare/Second_Result';\r\nimport axios from \"../utils/axios\";\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from '../utils/Requests';\r\n\r\nfunction CompareNfts({myclient}) {\r\n  const [firstCoin, setfirstCoin] = useState(null)\r\n  const [firstSelectedCoin, setfirstSelectedCoin] = useState(null)\r\n  const [firstSelectedCoinDetail, setfirstSelectedCoinDetail] = useState(null)\r\n  const [firstSearchList, setfirstSearchList] = useState(null)\r\n  const [isFirstDeatilLoading, setisFirstDeatilLoading] = useState(false)\r\n  \r\n  const [secondCoin, setsecondCoin] = useState(null)\r\n  const [secondSelectedCoin, setsecondSelectedCoin] = useState(null)\r\n  const [secondSelectedCoinDetail, setsecondSelectedCoinDetail] = useState(null)\r\n  const [secondSearchList, setsecondSearchList] = useState(null)\r\n  const [isSecondDeatilLoading, setisSecondDeatilLoading] = useState(false)\r\n  let firstCoinTimeout = null;\r\n  let secondCoinTimeout = null;\r\n\r\n\r\n  const [firstNftGraphData, setfirstNftGraphData] = useState(null)\r\n  const [firstNftGraphDataLoading, setfirstNftGraphDataLoading] = useState(false)\r\n\r\n  const [secondNftGraphData, setsecondNftGraphData] = useState(null)\r\n  const [secondNftGraphDataLoading, setsecondNftGraphDataLoading] = useState(false)\r\n  const [nftdeatilCancelSourceFirst, setnftdeatilCancelSourceFirst] = useState(null)\r\n  const [nftdeatilCancelSourceSecond, setnftdeatilCancelSourceSecond] = useState(null)\r\n\r\n  const [graphDuration, setgraphDuration] = useState('Week')\r\n\r\n  // https://graphql.icy.tools/graphql\r\n  \r\n  const searchByName = (e) => {\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // swip the Nft search box\r\n  const swapCoin = () => {\r\n    // setisFirstDeatilLoading(true)\r\n    // setisSecondDeatilLoading(true)\r\n\r\n    let temp = firstCoin == null ? '' : firstCoin;\r\n    setfirstCoin(secondCoin == null ? '' : secondCoin)\r\n    setsecondCoin(temp)\r\n\r\n    setsecondSelectedCoinDetail(null)\r\n    setfirstSelectedCoinDetail(null)\r\n    \r\n    temp = firstSelectedCoin == null ? '' : firstSelectedCoin;\r\n    setfirstSelectedCoin(secondSelectedCoin == null ? '' : secondSelectedCoin);\r\n    setsecondSelectedCoin(temp);\r\n    \r\n    setsecondNftGraphData(null)\r\n    setfirstNftGraphData(null)\r\n\r\n  }\r\n  \r\n  // get seatch data and store in state\r\n  const get_search_data = async (param, callback) => {\r\n    var result = null\r\n    await axios.post(requests.search_nft, {\r\n        name : param\r\n      }).then((result) => {\r\n        callback(result.data.data.data.contracts)\r\n      })\r\n      .catch((error)=>{\r\n        setfirstSearchList(null)\r\n      });\r\n    return result\r\n  }\r\n  \r\n  // get selected nft detail\r\n  const get_selected_nft_details = (address, callback, loading_callback, callback2, loading_callback2, setCancelToken) => {\r\n    let cancelTokenSource1 = ax.CancelToken.source();\r\n    let cancelTokenSource2 = ax.CancelToken.source();\r\n    axios.post(requests.get_nft_detail, {\r\n      address : address.address\r\n      }, {\r\n        cancelToken: cancelTokenSource1.token\r\n      }).then((result) => {\r\n        loading_callback(false)\r\n        callback(result.data.data)\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback(false)\r\n      });\r\n\r\n    loading_callback2(true);\r\n    axios.post(requests.get_nft_history, {\r\n      address : address.address,\r\n      duration: graphDuration\r\n      }, {\r\n        cancelToken: cancelTokenSource2.token\r\n      }).then(response => response.data)\r\n      .then((result) => {\r\n        callback2({\r\n          average: result.data.average,\r\n          x_axis: result.data.x_axis,\r\n          tooltip: result.data.tooltip,\r\n        });        // callback2(result.data.data)\r\n        loading_callback2(false);\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback2(false);\r\n      });\r\n\r\n      setCancelToken([cancelTokenSource1, cancelTokenSource2]);\r\n\r\n  }\r\n  \r\n  // On first coin change\r\n  useEffect(() => {\r\n    if(firstCoin == null || firstCoin == ''){\r\n      setfirstSearchList(null)\r\n    }\r\n    else{\r\n      setfirstSearchList('loading')\r\n      firstCoinTimeout = setTimeout(() => {\r\n        get_search_data(firstCoin, setfirstSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(firstCoinTimeout)\r\n    }\r\n  }, [firstCoin])\r\n\r\n  // On second coin change\r\n  useEffect(() => {\r\n    if(secondCoin == null || secondCoin == ''){\r\n      setsecondSearchList(null)\r\n    }\r\n    else{\r\n      setsecondSearchList('loading')\r\n      secondCoinTimeout = setTimeout(() => {\r\n        get_search_data(secondCoin, setsecondSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(secondCoinTimeout)\r\n    }\r\n  }, [secondCoin])\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log(secondSelectedCoin, firstSelectedCoin);\r\n    if(firstSelectedCoin){\r\n      setfirstNftGraphDataLoading(true)\r\n      axios.post(requests.get_nft_history, {\r\n        address : firstSelectedCoin.address,\r\n        duration: graphDuration\r\n        }).then(response => response.data)\r\n        .then((result) => {\r\n          setfirstNftGraphData({\r\n            average: result.data.average,\r\n            x_axis: result.data.x_axis,\r\n            tooltip: result.data.tooltip,\r\n          });        // callback2(result.data.data)\r\n          setfirstNftGraphDataLoading(false);\r\n        })\r\n        .catch((error)=>{\r\n          setfirstNftGraphDataLoading(false);\r\n        });\r\n    }\r\n\r\n    if(secondSelectedCoin){\r\n      setsecondNftGraphDataLoading(true)\r\n      axios.post(requests.get_nft_history, {\r\n        address : secondSelectedCoin.address,\r\n        duration: graphDuration\r\n        }).then(response => response.data)\r\n        .then((result) => {\r\n          setsecondNftGraphData({\r\n            average: result.data.average,\r\n            x_axis: result.data.x_axis,\r\n            tooltip: result.data.tooltip,\r\n          });        // callback2(result.data.data)\r\n          setsecondNftGraphDataLoading(false);\r\n        })\r\n        .catch((error)=>{\r\n          setsecondNftGraphDataLoading(false);\r\n        });\r\n    }\r\n  }, [graphDuration])\r\n\r\n  useEffect(() => {\r\n    if(firstSelectedCoin != null && firstSelectedCoin != ''){\r\n      setisFirstDeatilLoading(true);\r\n      get_selected_nft_details(\r\n        firstSelectedCoin, \r\n        setfirstSelectedCoinDetail, \r\n        setisFirstDeatilLoading, \r\n        setfirstNftGraphData, \r\n        setfirstNftGraphDataLoading, \r\n        setnftdeatilCancelSourceFirst\r\n      )\r\n    }\r\n    else{\r\n      setfirstSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      if(firstSelectedCoin != null && firstSelectedCoin != ''){\r\n        if(nftdeatilCancelSourceFirst){\r\n          nftdeatilCancelSourceFirst.forEach(element => {\r\n            element.cancel('manually');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [firstSelectedCoin])\r\n  \r\n  useEffect(() => {\r\n    // console.log(secondSelectedCoin);\r\n  }, [firstSearchList])\r\n\r\n  useEffect(() => {\r\n    if(secondSelectedCoin != null && secondSelectedCoin != ''){\r\n      setisSecondDeatilLoading(true);\r\n      get_selected_nft_details(\r\n        secondSelectedCoin,\r\n        setsecondSelectedCoinDetail,\r\n        setisSecondDeatilLoading,\r\n        setsecondNftGraphData,\r\n        setsecondNftGraphDataLoading,\r\n        setnftdeatilCancelSourceSecond\r\n      )\r\n    }\r\n    else{\r\n      setsecondSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      if(secondSelectedCoin != null && secondSelectedCoin != ''){\r\n        if(nftdeatilCancelSourceSecond){\r\n          nftdeatilCancelSourceSecond.forEach(element => {\r\n            element.cancel('manually');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [secondSelectedCoin])\r\n  \r\n  \r\n\r\n\r\n\r\n  return (\r\n    \r\n    <main className=\"main-spacing\">\r\n    {/*  Submit NFTs form start  */}\r\n    <section className=\"compare-nft\">\r\n        <div className=\"nft-container\">\r\n            <div className=\"container-lg\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-12 heading\">\r\n                        <h1> <span className=\"highlight\">Compare</span> NFTs </h1>\r\n                    </div>\r\n                    <div className=\"col-lg-9 left-block\">\r\n                        <div className=\"compare-nft-form\">\r\n                          <form action=\"\" method=\"post\" id=\"compare-nft-form\">\r\n                            <div className=\"box-modal\">\r\n                              <div className=\"select-group\">\r\n\r\n    \r\n                              <First_Nft_Search\r\n                                firstCoin={firstCoin}\r\n                                setfirstCoin={setfirstCoin}\r\n                                firstSelectedCoin={firstSelectedCoin}\r\n                                setfirstSelectedCoin={setfirstSelectedCoin}\r\n                                firstSearchList={firstSearchList}\r\n                                setfirstSearchList={setfirstSearchList}\r\n                              />\r\n                                \r\n                                <div className=\"compare-sign\">\r\n                                  <button className='compare-btn' type='button' onClick={swapCoin}>\r\n                                    <img src={assetUrl+\"images/compare-icon.png\"} alt=\"Compare icon\" />\r\n                                  </button>\r\n                                </div>\r\n\r\n                                <Second_Nft_Search\r\n                                  secondCoin={secondCoin}\r\n                                  setsecondCoin={setsecondCoin}\r\n                                  secondSelectedCoin={secondSelectedCoin}\r\n                                  setsecondSelectedCoin={setsecondSelectedCoin}\r\n                                  secondSearchList={secondSearchList}\r\n                                  setsecondSearchList={setsecondSearchList}\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"diff-result\">\r\n                                <div className=\"result-containers\">\r\n\r\n                                  <First_Result \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    isFirstDeatilLoading={isFirstDeatilLoading}\r\n                                    />\r\n                                  \r\n                                  <CompareResult \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                  />\r\n\r\n                                  <Second_Result \r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                    isSecondDeatilLoading={isSecondDeatilLoading}\r\n                                  />\r\n\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n\r\n                        <div className=\"comparison-graph\">\r\n                          <GraphDuration \r\n                            firstNftGraphDataLoading={firstNftGraphDataLoading}\r\n                            secondNftGraphDataLoading={secondNftGraphDataLoading}\r\n                            graphDuration={graphDuration}\r\n                            setgraphDuration={setgraphDuration}\r\n                          />\r\n                          <div className=\"box-modal\">\r\n                            <div className=\"graph-wrapper\">\r\n                              <NftComparisionGraph \r\n                                firstNftGraphData={firstNftGraphData}\r\n                                secondNftGraphData={secondNftGraphData}\r\n                                firstNftGraphDataLoading={firstNftGraphDataLoading}\r\n                                secondNftGraphDataLoading={secondNftGraphDataLoading}\r\n                                firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 right-block mt-lg-0 mt-5\">\r\n                        <div className=\"image\">\r\n                            <img src={assetUrl+\"images/img3.png\"} alt=\"dummy image\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    {/*  Submit NFTs form end  */}\r\n\r\n</main>\r\n  )\r\n}\r\n\r\nexport default CompareNfts","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ContactUs() {\r\n    return (\r\n        <main className=\"main-spacing\">\r\n            <section>\r\n                <div className='container-lg'>\r\n                    <h4 className='highlight bold-14 mb-3'>If you have any questions or concerns about your NFT, we offer 24 hour around the clock assistance, you can email or dm us on Twitter!</h4>\r\n                    <div className=\"twitter-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Twitter </span>: <span>GemsToolsNFT</span> </div>\r\n                    </div>\r\n                    <div className=\"mail-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Email </span>: <a href='mailto:gemstoolsnft@gmail.com' className='text-white'> gemstoolsnft@gmail.com </a> </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContactUs\r\n","export const updateDefaultjob = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_DEFAULT_JOB\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const updateCounter = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_COUNTER\",\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport const trendingNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_TRENDING_NFT\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const listNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_LIST_NFT\",\r\n        payload: data,\r\n    };\r\n};","import { toast } from 'react-toastify';\r\n\r\nexport const toast_success = (message) => {\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const toast_warning = (message) => {\r\n    toast.warn(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const set_loading = (message) => {\r\n    return toast.loading(message)\r\n}\r\n\r\nexport const resolve_loading = (id, status, message) => {\r\n    return toast.update(id, { render: message, type:status, isLoading: false, autoClose: 5000,closeButton: true });\r\n}\r\n\r\nexport const calculate_average = (popularity, originality, community, growth_evaluation, resell_evaluation, potential_blue_chip) => {\r\n    return (\r\n        (parseInt(popularity || 0) + parseInt(originality || 0) + parseInt(community || 0) + parseInt(growth_evaluation || 0) + parseInt(resell_evaluation || 0) + parseInt((potential_blue_chip||0)*10)) \r\n    / 6).toFixed(2)\r\n}\r\n\r\nexport const calculate_grade = (score) => {\r\n    if(score >= 90 && score <= 93){\r\n        return 'A-';\r\n    }else if(score >= 94 && score <= 97){\r\n        return 'A';\r\n    }else if(score >= 98 && score <= 100){\r\n        return 'A+';\r\n    }\r\n    else{\r\n        return '-';\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction DotBar({bars}) {\r\n    var color = 'grey';\r\n    var item_fill = 0;\r\n    if(bars > 0 && bars <= 3){\r\n        color = 'red'\r\n        item_fill = 1\r\n    }\r\n    else if(bars > 3 && bars  <= 7){\r\n        color = 'yellow'\r\n        item_fill = 3\r\n    }\r\n    else if(bars > 7 && bars <= 10){\r\n        color = 'green'\r\n        item_fill = 5\r\n    }\r\n  return (\r\n    <div className=\"dot-container\">\r\n        {[1,2,3,4,5].map(function(item, index){\r\n            if(index < item_fill){\r\n                return <span key={index} className={color+ \" dot\"}></span>\r\n            }\r\n            else{\r\n                return <span key={index} className=\"std dot\"></span>\r\n            }\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DotBar","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\n\r\nfunction MobileNftList({data, ...props}) { \r\n  \r\n  const addLike = (id, totalLike) => {\r\n    console.log(id, totalLike);\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  let nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-5 nft-info-col\">\r\n            <div className=\"nft-info\">\r\n              <div className=\"image\">\r\n                <a>\r\n                  <img src={nftAssetUrl+nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"nft-title\">\r\n                <h2 className=\"highlight\">{data.nft_name}</h2>\r\n              </div>\r\n              <div className=\"nft-user\">\r\n                <h3 className=\"peak\">{data.fname}</h3>\r\n              </div>\r\n              <div className=\"nft-redirect-btn\">\r\n                <a href={data.nft_link} target={\"_blank\"}>\r\n                  <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a className=\"highlight imp bold-14 mt-2\" onClick={\r\n                  (e)=>{\r\n                    e.preventDefault();\r\n                    if(e.target.innerHTML == \"Read more\"){\r\n                      $(\".more-detail\"+data.id).slideDown('fast');\r\n                      e.target.innerHTML = \"Read less\";\r\n                    }\r\n                    else{\r\n                      $(\".more-detail\"+data.id).slideUp('fast');\r\n                      e.target.innerHTML = \"Read more\";\r\n                    }\r\n                  }\r\n                }>Read more</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-7 nft-stat-col\">\r\n          <div className=\"action-btns\">\r\n              <div className=\"mb-2 mobile-like-container\">\r\n                <button className=\"total_liks_count\">\r\n                  <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                </button>\r\n                {\r\n                  liked.includes(data.id) ? <>\r\n                    <button className=\"action liked\">\r\n                      <span>\r\n                      Liked&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </> : <>\r\n                    <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                      <span>\r\n                        Like&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>% NFTs Sold</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Social media</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.community)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Design</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.originality)}</span>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className=\"col-12 mt-2\">\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\"></div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Growth Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.growth_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Resell Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.resell_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Potential Blue Chip</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <div className=\"potential-blue-chip-graph\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Average</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n              <div className={\"mobile-more-detail more-detail\"+data.id} style={{display:'none'}}>\r\n                <div className=\"social-media my-2\">\r\n                  <span className=\"highlight\">Social media: </span>\r\n                  <span>\r\n                    {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                    {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                  </span>\r\n                </div>  \r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"50px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileNftList;\r\n","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\nfunction NftListItem({ data, uniquekey, ...props }) {\r\n  \r\n  const addLike = (id, totalLike) => {\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  var nft_images = JSON.parse(data.image);\r\n\r\n  return (\r\n      <>\r\n          <tr key={uuidv4()} className='border-0'>\r\n            <td>\r\n              <div className=\"nft-detail\">\r\n                <div className=\"image\">\r\n\r\n                  {\r\n                    (nft_images && nft_images.length) > 0 ? <>\r\n                        <a href={nftAssetUrl+nft_images[0]} target={\"_blank\"}>\r\n                            <img src={nftAssetUrl+nft_images[0]} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                        </a>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    </>\r\n                  }\r\n\r\n                  {/* {\r\n                    data.image && <>\r\n                      {\r\n                        nft_images.map((item, index)=>{\r\n                          return <>\r\n                              <a href={nftAssetUrl+item} target={\"_blank\"}>\r\n                                  <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                              </a>\r\n                            </>\r\n                        })\r\n                      }\r\n                    </>\r\n                  } */}\r\n                </div>\r\n                <div className=\"nft-content\">\r\n                    <div className=\"nft-name\">\r\n                        <span>{data.nft_name}</span>\r\n                    </div>\r\n                    {/* <div className=\"nft-user-name\">\r\n                        <span>{data.fname}</span>\r\n                    </div> */}\r\n                    <div className=\"nft-detail-btn\">\r\n                        <a href={data.nft_link} target={'_blank'}>\r\n                            <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <a onClick={\r\n                          (e)=>{\r\n                            e.preventDefault();\r\n                            if(e.target.innerHTML == \"Read more\"){\r\n                              $(\".more-detail\"+data.id).slideDown('fast');\r\n                              e.target.innerHTML = \"Read less\";\r\n                            }\r\n                            else{\r\n                              $(\".more-detail\"+data.id).slideUp('fast');\r\n                              e.target.innerHTML = \"Read more\";\r\n                            }\r\n                          }\r\n                        } className=\"highlight imp bold-14 mt-2\">Read more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            </td>\r\n            <td>{data.utility}</td>\r\n            <td>\r\n              <div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">% NFTs Sold</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Social media</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.community)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Design</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.originality)}</span>\r\n                </div> \r\n\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Growth Evaluation</span>\r\n                  <span className=\"color-orange\">{data.growth_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Resell Evaluation</span>\r\n                  <span className=\"color-orange\">{data.resell_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <div className=\"text-left\">Potential Blue Chip </div>\r\n                  <div className=\"potential-blue-chip-graph text-left\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>            \r\n              </div>\r\n            </td>\r\n            <td>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</td>\r\n            <td>\r\n                <div className=\"action-btns\">\r\n                  <div>\r\n                    <button className=\"total_liks_count\">\r\n                      <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                    </button>\r\n                    {\r\n                      liked.includes(data.id) ? <>\r\n                        <button className=\"action liked\">\r\n                          <span>\r\n                          Liked&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </> : <>\r\n                        <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                          <span>\r\n                            Like&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n          <tr key={uuidv4()} className=\"text-left\">\r\n            <td colSpan={6} className=\"p-0\">\r\n              <div className={\"more-detail\"+data.id} style={{display: 'none'}}>\r\n\r\n                {\r\n                  (data.twitter_link || data.discord_link) ? <>\r\n                    <div className='social-media mb-2'>\r\n                        <span className='highlight'>Social media: </span> \r\n                        <span>\r\n                          {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                          {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                        </span>\r\n                    </div>\r\n                  </>\r\n                  :<>\r\n                  </>\r\n                }\r\n                <div className='other-detail'>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </td>     \r\n          </tr>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default NftListItem;\r\n","import {\r\n  BarElement, CategoryScale, Chart as ChartJS, LinearScale, Title,\r\n  Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n);\r\n\r\n\r\n\r\nfunction NftRankGraph({graphData, ...props}) {\r\n  const labels = graphData.months;\r\n  const dataset = [];\r\n  graphData.data.likes.forEach((element, index) => {\r\n    dataset.push({\r\n      label: graphData.months[index],\r\n      data: element,\r\n      customData: graphData.data.tooltip[index],\r\n      backgroundColor: \"rgb(255, 255, 255)\",\r\n      hoverBackgroundColor: \"rgb(245 222 179)\",\r\n      stack: graphData.months[index],\r\n    })\r\n  });\r\n  \r\n  const data = {\r\n    labels,\r\n    datasets: dataset\r\n  };\r\n\r\n  // [\r\n  //   {\r\n  //     label: \"Dataset 1\",\r\n  //     data: [2, 5, 6],\r\n  //     customData: ['hello', 'how', 'are'],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 0\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 2\",\r\n  //     data: [9, 8, 3],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 1\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 3\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 3\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 4\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 4\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 5\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 5\",\r\n  //   },\r\n  // ]\r\n\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const {chart, tooltip} = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n  \r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n  \r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map(b => b.lines);\r\n  \r\n      const tableHead = document.createElement('thead');\r\n  \r\n      titleLines.forEach(title => {\r\n        const tr = document.createElement('tr');\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const th = document.createElement('th');\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n  \r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n  \r\n      const tableBody = document.createElement('tbody');\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n  \r\n        // const span = document.createElement('span');\r\n        // span.style.background = colors.backgroundColor;\r\n        // span.style.borderColor = colors.borderColor;\r\n        // span.style.borderWidth = '2px';\r\n        // span.style.marginRight = '10px';\r\n        // span.style.height = '10px';\r\n        // span.style.width = '10px';\r\n        // span.style.display = 'inline-block';\r\n  \r\n        const tr = document.createElement('tr');\r\n        tr.style.backgroundColor = 'inherit';\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const td = document.createElement('td');\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement('div');\r\n        text.innerHTML = body[0];\r\n        td.style.fontSize = '12px'\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n  \r\n      const tableRoot = tooltipEl.querySelector('table');\r\n  \r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n  \r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n  \r\n    const {offsetLeft: positionX, offsetTop: positionY} = chart.canvas;\r\n  \r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + 'px';\r\n    tooltipEl.style.top = positionY + tooltip.caretY + 'px';\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector('div');\r\n  \r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement('div');\r\n      tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\r\n      tooltipEl.style.borderRadius = '3px';\r\n      tooltipEl.style.color = 'white';\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = 'none';\r\n      tooltipEl.style.position = 'absolute';\r\n      tooltipEl.style.transform = 'translate(-50%, 0)';\r\n      tooltipEl.style.transition = 'all .1s ease';\r\n  \r\n      const table = document.createElement('table');\r\n      table.style.margin = '0px';\r\n  \r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n  \r\n    return tooltipEl;\r\n  };\r\n\r\n  \r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: 'Tranding NFTs',\r\n      },\r\n      // tooltip: {\r\n      //   callbacks: {\r\n      //     label: function(item) {\r\n      //       console.log(item.dataset.customData[item.dataIndex].replaceAll('<br/>', '\\n'));\r\n      //       return item.dataset.customData[item.dataIndex];\r\n      //     },\r\n      //   },\r\n      // },\r\n      tooltip: {\r\n        enabled: false,\r\n        position: 'nearest',\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      }\r\n    },\r\n    responsive: true,\r\n    interaction: {\r\n      intersect: false,\r\n    },\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n        grid: {\r\n            display: false\r\n        }\r\n        },\r\n    y: {\r\n        title: {\r\n            text: \"TOP TRENDING IN LEADERBOARD VOTES\",\r\n            display: true,\r\n            font:{\r\n                size: 8\r\n            }\r\n        },\r\n        ticks: {\r\n            display: false\r\n        },\r\n        grid: {\r\n            display: false\r\n        }\r\n      },\r\n    },\r\n\r\n  };\r\n  // console.log(graphData);\r\n    return (\r\n        <div className=\"rank-block\">\r\n                <div className=\"bar-graph-wrapper\">\r\n                  <div className=\"heading\">\r\n                    <h2>\r\n                      <span className=\"highlight\">Reflect Rank</span> NFTs\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"bar-graph\">\r\n                    \r\n                  <Bar options={options} data={data} height={200}/>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default NftRankGraph\r\n","import { Slider, Typography } from \"@material-ui/core\";\r\nimport ax from 'axios';\r\nimport $ from 'jquery';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listNft } from \"../actions\";\r\nimport axios from \"../utils/axios\";\r\nimport { assetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport MobileNftList from \"./MobileNftList\";\r\nimport NftListItem from \"./NftListItem\";\r\nimport NftRankGraph from \"./NftRankGraph\";\r\n\r\n\r\nfunction NftList() {\r\n  const list_nft = useSelector((state) => state.listNft);\r\n  const dispatch = useDispatch();\r\n  const [is_list_nft_loading, set_is_list_nft_loading] = useState(true);\r\n  const [is_graph_nft_loading, set_is_graph_nft_loading] = useState(true);\r\n  const [nftGraphData, setNftGraphData] = useState(null);\r\n  const [searchAverageSort, setsearchAverageSort] = useState(null)\r\n  const [search_average, setSearch_average] =  useState([0,100]);\r\n  const [filterData, setfilterData] =  useState({});\r\n  const [utilities, setutilities] =  useState(null);\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  const [showMyCustomSelect, setshowMyCustomSelect] = useState(false)\r\n  const [isFilterEnable, setisFilterEnable] = useState(false)\r\n\r\n  const rangeSelector = (event, newValue) => {\r\n    setfilterData((prev)=>{\r\n      return {\r\n        ...prev, \r\n        average : newValue\r\n      }\r\n    });\r\n    setSearch_average(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(showFilter === true){\r\n      $('.nft-filter-wrapper').slideDown('fast');\r\n    }\r\n    else{\r\n      $('.nft-filter-wrapper').slideUp('fast');\r\n    }\r\n\r\n    if(utilities == null && showFilter === true){\r\n      axios\r\n        .get(requests.get_utilities)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          setutilities(data.data);\r\n        })\r\n        .catch(function(error) {\r\n          // set_is_list_nft_loading(false);\r\n        });\r\n    }\r\n  }, [showFilter])\r\n  \r\n  // const showFilter = (e) => {\r\n    \r\n  // };\r\n\r\n  const filterChangeHandler = (e) => {\r\n    setfilterData((prev)=>{\r\n      return {\r\n        ...prev, \r\n        [e.target.name] : e.target.value == '' ? null : e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    \r\n  }, [search_average]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(showFilter == false){\r\n      set_is_list_nft_loading(true);\r\n      axios\r\n        .get(requests.all)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_list_nft_loading(false);\r\n          if (data.status === \"success\") {\r\n            dispatch(listNft(data.data));\r\n            set_is_list_nft_loading(false);\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          set_is_list_nft_loading(false);\r\n        });\r\n    }\r\n\r\n    if(nftGraphData == null){\r\n      axios\r\n        .get(requests.tranding_chart)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_graph_nft_loading(false);\r\n          setNftGraphData(data.data)\r\n        })\r\n        .catch(function(error) {\r\n          set_is_graph_nft_loading(false);\r\n        });\r\n    }\r\n\r\n\r\n  }, [showFilter]);\r\n\r\n  useEffect(() => {\r\n    if(searchAverageSort){\r\n      setfilterData((prev)=>{\r\n        return {\r\n          ...prev, \r\n          average_sort : searchAverageSort\r\n        }\r\n      });\r\n    }\r\n  }, [searchAverageSort])\r\n\r\n  useEffect(() => {\r\n    let cancelTokenSource = ax.CancelToken.source();\r\n\r\n    if(showFilter === true){\r\n      set_is_list_nft_loading(true);\r\n      axios\r\n        .get(requests.filter_nftlists,{\r\n          cancelToken: cancelTokenSource.token,\r\n          params: {\r\n            ...filterData\r\n          }\r\n        })\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          set_is_list_nft_loading(false);\r\n          if (data.status === \"success\") {\r\n            dispatch(listNft(data.data));\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          if(error.message && error.message != \"manually\"){\r\n            set_is_list_nft_loading(false);\r\n          }\r\n        });\r\n\r\n    }\r\n    \r\n    if(Object.keys(filterData).length == 0){\r\n      setisFilterEnable(false)\r\n    }\r\n    else if((typeof filterData.name == 'undefined' || filterData.name == null) &&\r\n      (typeof filterData.utility == 'undefined' || filterData.utility == null) && \r\n      (typeof filterData.average == 'undefined' || (filterData.average[0] == 0 && filterData.average[1] == 100) ) && \r\n      (typeof filterData.average_sort == 'undefined' || filterData.average_sort == null)\r\n    ){\r\n      setisFilterEnable(false)\r\n    }\r\n    else if(Object.values(filterData).length > 0){\r\n      setisFilterEnable(true)\r\n    }\r\n  \r\n    return () => {\r\n      if(showFilter === true){\r\n        cancelTokenSource.cancel('manually');\r\n      }\r\n    }\r\n  }, [filterData])\r\n  \r\n  const [utilities_name, setutilities_name] = useState([]);\r\n  const utilityCheckHandler = (e) => {\r\n    // const {\r\n    //   target: { value },\r\n    // } = event;\r\n    // setutilities_name(\r\n    //   typeof value === 'string' ? value.split(',') : value,\r\n    // );\r\n    // setfilterData((prev)=>{\r\n    //   return {\r\n    //     ...prev, \r\n    //     utility : value\r\n    //   }\r\n    // });\r\n    if(e.target.checked){\r\n\r\n      setfilterData((prev)=>{\r\n          if(typeof prev.utility === 'undefined' || prev.utility == null){\r\n            return {\r\n              ...prev, \r\n              utility : [e.target.value]\r\n            }\r\n          }\r\n          else{\r\n            let utility = prev.utility;\r\n            return {\r\n              ...prev, \r\n              utility : [...utility, e.target.value]\r\n            }\r\n          }\r\n      });\r\n    }\r\n    else{\r\n      setfilterData((prev)=>{\r\n        let tempprev = prev.utility.filter((item)=>{\r\n          return e.target.value != item;\r\n        })\r\n        return {\r\n          ...prev,\r\n          utility: tempprev.length > 0 ? tempprev : null\r\n        };\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n  return (\r\n    <section className=\"nft-group-section\">\r\n      <div className=\"container-lg\">\r\n        <div className=\"row custom-newnft-row\">\r\n          <div className=\"col-xl-8\">\r\n            <div className=\"new-nft\">\r\n              <div className=\"heading\">\r\n                <h1 className=\"new-nft-heading\">\r\n                  <span><span className=\"highlight\">New</span> NFTs</span>\r\n                  <button className=\"btn btn-transparent filter-button\" onClick={()=>{\r\n                    if(showFilter) {$('.nft-filter-wrapper').slideToggle('fast')} else{setShowFilter(true)}\r\n                  }}>\r\n                    {isFilterEnable && <><span className=\"filter_active\"></span></>}\r\n                  Filters &nbsp; <i className=\"fa fa-filter\" aria-hidden=\"true\"></i></button>\r\n                </h1>\r\n              </div>\r\n\r\n              <div className=\"nft-filter-wrapper\" style={{display: 'none'}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"text-right\">\r\n                      <button className=\"cancel-filter\" onClick={()=>{ \r\n                        setShowFilter(false)\r\n                        setfilterData({})\r\n                        $('.my_custom_select_item_container input').prop('checked', false);\r\n                        setsearchAverageSort(null);\r\n                        setSearch_average([0, 100])\r\n                      }}>Reset ×</button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 mt-2\">\r\n                      <input type=\"text\" name=\"name\" id=\"search_nft_detail\" className=\"form-control\" placeholder=\"Search NFTs detail\" value={filterData.name || ''} onChange={filterChangeHandler}/>\r\n                      <div className=\"error-message\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 mt-3 mt-md-2\">\r\n                      <div className=\"my_custom_select_container\" tabIndex={999} \r\n                        onFocus={()=>{setshowMyCustomSelect(true)}}\r\n                        onBlur={()=>{setshowMyCustomSelect(false)}} >\r\n                        <input type=\"text\" name=\"utility\" id=\"search_utility\" value={filterData.utility ? filterData.utility.join(', ') : ''} className=\"form-control\"  placeholder=\"Search utility\" readOnly/>\r\n                        <div className=\"my_custom_select_item_container\" style={{display: showMyCustomSelect ? 'block': 'none'}} onClick={()=>{document.getElementById('search_utility').focus()}}>\r\n                          {\r\n                            // showMyCustomSelect ? <>\r\n                              <ul>\r\n                                {\r\n                                  utilities && utilities.map((item, index)=>{\r\n                                    return <><li key={index} value={item}>\r\n                                      <label htmlFor={item} className=\"mb-1\">\r\n                                        <input type=\"checkbox\" name=\"utilities_check[]\" id={item} value={item} onChange={utilityCheckHandler}/>\r\n                                        <label htmlFor={item} className=\"custom-check-label m-0\">{item}</label>\r\n                                      </label>\r\n\r\n                                      </li></>;\r\n                                  })\r\n                                }\r\n                              </ul>\r\n                          }\r\n                        </div>\r\n\r\n                      </div>\r\n                      \r\n                      {/* <select name=\"\" id=\"\" defaultValue={0} className=\"form-control\" name=\"utility\" id=\"search_utility\" onChange={filterChangeHandler}>\r\n                        <option value=\"0\" disabled>Select utilities</option>\r\n                        {\r\n                          utilities && utilities.map((item, index)=>{\r\n                            return <><option key={index} value={item}>{item}</option></>;\r\n                          })\r\n                        }\r\n                      </select> */}\r\n\r\n\r\n\r\n                      {/* <FormControl sx={{ m: 1, width: 300 }} style={{width:'100%'}} variant=\"standard\">\r\n                        <InputLabel id=\"demo-multiple-checkbox-label\" variant=\"standard\"><span className=\"my-custom-material-select-label\">Select utlities</span></InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-multiple-checkbox-label\"\r\n                          id=\"demo-multiple-checkbox\"\r\n                          multiple\r\n                          value={utilities_name}\r\n                          handleChange                        \r\n                          onChange={handleChange}\r\n                          input={<OutlinedInput label=\"Tag\" variant=\"standard\" className=\"text-white\" />}\r\n                          renderValue={(selected) => selected.join(', ')}\r\n                          MenuProps={MenuProps}\r\n                          className=\"my-custom-material-select\"\r\n                        >\r\n                          {utilities && utilities.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                              <Checkbox checked={utilities_name.indexOf(name) > -1} />\r\n                              <ListItemText primary={name} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                    </FormControl> */}\r\n\r\n\r\n                      <div className=\"error-message\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-6 col-12\">\r\n                    <div className=\"form-group mb-0 px-1 mt-3 mt-lg-1\">\r\n                      <Typography id=\"range-slider\" className=\"mb-0\" gutterBottom style={{marginTop:'2px'}}>\r\n                        &nbsp;&nbsp;Select Range: ({search_average[0]} - {search_average[1]})\r\n                        <button id=\"sort_order_button\" className=\"btn btn-transprant text-white p-0 ml-3\" onClick={()=>{\r\n                          setsearchAverageSort((prev)=>{\r\n                            return (prev == 'high_to_low') ? 'low_to_high' : 'high_to_low'\r\n                          })\r\n                        }}>\r\n                          {searchAverageSort ?\r\n                          <>\r\n                            {searchAverageSort == 'high_to_low' ? <>\r\n                              <i className=\"fas fa-sort-amount-down\"></i>\r\n                            </> : <>\r\n                              <i className=\"fas fa-sort-amount-down-alt\"></i>\r\n                            </>}\r\n                          </>\r\n                          :<>\r\n                            <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                          </>}\r\n                          \r\n                        </button>\r\n                      </Typography>\r\n                      <Slider\r\n                        value={search_average}\r\n                        onChange={rangeSelector}\r\n                        valueLabelDisplay=\"auto\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"nft-table-wrapper\">\r\n                <div className=\"\">\r\n                  <table className=\"nft-table table table-borderless\" id=\"nft-list-table\">\r\n                    <thead id=\"nft-list-table\">\r\n                      <tr>\r\n                        <td className=\"nft-detail-col\">NFTs Details</td>\r\n                        <td>Utility</td>\r\n                        {/* <td>Popularity</td>\r\n                        <td>Community</td>\r\n                        <td>Originality</td> */}\r\n                        <td className=\"nft-detail-column\">\r\n                          Detail\r\n                        </td>\r\n                        <td>Average</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        is_list_nft_loading ? <>\r\n                          <tr>\r\n                            <td colSpan={6}>\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                            </td>\r\n                          </tr>\r\n                        </> : <>\r\n                          {list_nft && list_nft.length ? (\r\n                              \r\n                              list_nft.map((item, index) => {\r\n                                return (\r\n                                    <NftListItem data={item} key={index} />\r\n                                );\r\n                              })\r\n                            \r\n                          ) : (\r\n                            <>\r\n                              <tr>\r\n                                <td colSpan={6}>\r\n                                  <div className=\"text-center\">No record found</div>\r\n                                </td>\r\n                              </tr>\r\n                            </> \r\n                          )}\r\n                        </>\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mobile-nft-list\">\r\n\r\n                {\r\n                  is_list_nft_loading ? \r\n                  <>\r\n                    <div>\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div><br />\r\n                        <div className=\"skeleton\">\r\n                          <br /><br /><br /><br /><br /><br />\r\n                        </div>\r\n                    </div>\r\n                  </>\r\n                  :\r\n                    list_nft && list_nft.length ? (\r\n                      <>\r\n                        {list_nft.map((item, index) => {\r\n                          return (\r\n                            <div className=\"user-nft-block-mobile\" key={index}>\r\n                              <MobileNftList data={item}/>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div>\r\n                            <div className=\"text-center\">No record found</div>\r\n                        </div>\r\n                      </>\r\n                    )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"right-block\">\r\n              {(nftGraphData == null) ? <>\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br />\r\n                </div>\r\n              </> :\r\n              <>\r\n                <NftRankGraph graphData={nftGraphData}/>\r\n              </>}\r\n              <div className=\"gooogle-ads\">\r\n                <img src={assetUrl+\"images/img1.png\"} alt=\"dummy image\" />\r\n                <img src={assetUrl+\"images/img2.png\"} alt=\"dummy image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NftList;\r\n","import React from \"react\";\r\nimport { calculate_average, calculate_grade } from \"../utils/common\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport DotBar from \"./DotBar\";\r\n\r\nfunction CarouselItem({ data, ...props }) {\r\n  var nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div className=\"custom-carasol-min-height\">\r\n      <div className=\"carousel-items\">\r\n        <div className=\"item nft-block\">\r\n          <div className=\"content\">\r\n            <div className=\"row m-0\">\r\n              <div className=\"col-5 nft-info-col\">\r\n                <div className=\"nft-info\">\r\n                  <div className=\"image\">\r\n                    <a>\r\n                      <img src={nftAssetUrl + nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"nft-title\">\r\n                    <h2 className=\"highlight\">{data.nft_name}</h2>\r\n                  </div>\r\n                  <div className=\"nft-user\">\r\n                    <h3 className=\"peak\">{data.fname}</h3>\r\n                  </div>\r\n                  <div className=\"nft-redirect-btn\">\r\n                    <a href={data.nft_link} target={\"_blank\"}>\r\n                      <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-7 nft-stat-col d-flex flex-column justify-content-around\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>% NFTs Sold</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.popularity)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Social media</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.community)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Design</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.originality)}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div> */}\r\n\r\n                  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 mt-3\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.growth_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.resell_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    {/* style={{display: 'block'}} */}\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <div className=\"potential-blue-chip-graph\">\r\n                        <DotBar bars={data.potential_blue_chip} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Average</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>\r\n                      {calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CarouselItem;\r\n","import 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport React, { useRef } from \"react\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\n// import Carousel from \"react-elastic-carousel\";\r\nimport CarouselItem from \"./CarouselItem\";\r\nfunction TrendingNfts({ data, ...props }) {\r\n\r\n  if (props.is_trending_nft_loading) {\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  } else {\r\n    if (data && data.length > 0) {\r\n      var itemsPerPage = 3;\r\n      var totalPages = 3;\r\n      var carouselRef = useRef(null);\r\n      var resetTimeout;\r\n      var breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 767, itemsToShow: 2 },  \r\n        { width: 1100, itemsToShow: 3 }  \r\n      ]\r\n    }\r\n    const getTotalPage = () => {\r\n        let width = window.innerWidth;\r\n        if(width >= 1200){\r\n            return 2\r\n        }\r\n        else if(width >= 767){\r\n            return 3\r\n        }\r\n        else{\r\n            return 4\r\n        }\r\n    }\r\n\r\n    const owlresponsive = {\r\n        0 : {\r\n            items : 1\r\n        },\r\n        768 : {\r\n            items : 2\r\n        },\r\n        1200 : {\r\n            items : 3\r\n        }\r\n    };\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n              {data && data.length > 0 ? (\r\n                <>\r\n                  {/* <Carousel\r\n                    breakPoints={breakPoints}\r\n                    ref={carouselRef}\r\n                    pagination={false}\r\n                    enableAutoPlay={true}\r\n                    showArrows={false}\r\n                    itemPadding={[0, 10, 0, 10]}\r\n                    autoPlaySpeed={4000}\r\n                    onNextEnd={({ index }) => {\r\n                      clearTimeout(resetTimeout);\r\n                      if (index === getTotalPage()) {\r\n                        resetTimeout = setTimeout(() => {\r\n                          carouselRef.current.goTo(0);\r\n                        }, 3000); // same time\r\n                      }\r\n                    }}\r\n                  >\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Carousel> */}\r\n                  <OwlCarousel items={3} loop={true} autoplay={true} autoplayTimeout={4000} responsive={owlresponsive} dots={false}>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className='custom-carasol-min-height'>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </OwlCarousel>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3>No data Found</h3>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendingNfts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { trendingNft } from '../actions/index';\r\nimport NftList from '../partials/NftList';\r\nimport TrendingNfts from '../partials/TrendingNfts';\r\nimport axios from '../utils/axios';\r\nimport requests from '../utils/Requests';\r\nfunction Home() {\r\n    console.log(';s');\r\n    const trending_nft = useSelector(state => state.trendingNft)\r\n    const dispatch = useDispatch();\r\n    const [is_trending_nft_loading, set_is_trending_nft_loading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        axios.get(requests.trending_nft)\r\n            .then(response => response.data)\r\n            .then((data)=>{\r\n                set_is_trending_nft_loading(false);\r\n                if(data.status === 'success'){\r\n                    dispatch(trendingNft(data.data));\r\n                    set_is_trending_nft_loading(false);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                set_is_trending_nft_loading(false);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"main-spacing\">\r\n                <TrendingNfts data={trending_nft} is_trending_nft_loading={is_trending_nft_loading}/>\r\n                <NftList />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({ uploadImagesData, saveNftImages, deleteNftImages, validate, nftDataError, ...props }) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file mb-1' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n                <input type=\"file\" name=\"submit_nft_image\" id=\"submit_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n                <label htmlFor=\"submit_nft_image\" className='file-label'>\r\n                    <a className='form-control form-btn'>\r\n                        Choose File\r\n                    </a>\r\n                </label>\r\n        </div>\r\n        <div className=\"error-message\">{nftDataError.submit_nft_image || nftDataError.nft_image}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport UploadImageInput from '../partials/submit_nft/UploadImageInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from '../utils/Requests';\r\n\r\nvar loadingId = null;\r\nfunction SubmitNft() {\r\n    const [nftData, setNftData] = useState({});\r\n    const [nftDataError, setNftDataError] = useState({});\r\n    const [thankyou, setThankyou] = useState(false)\r\n    const [uploadImagesData, setUploadImagesData] = useState([])\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"submit_nft_image\").value = \"\";\r\n    }, [uploadImagesData])\r\n\r\n    const resetForm = () => {\r\n        document.getElementById('nft-submit-form').reset();\r\n        setNftData({});\r\n        setNftDataError({});\r\n    }\r\n\r\n    const nftSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        var flag = true;\r\n        var form = document.getElementById( 'nft-submit-form' );\r\n        var allFormControls = Array.from(form.elements);\r\n        allFormControls.forEach(element => {\r\n            if(!validate(element)){\r\n                flag = false\r\n            }\r\n        });\r\n\r\n        if(flag){\r\n            var formData = new FormData(form);\r\n            uploadImagesData.forEach((item, index) => {\r\n                formData.append(`nft_image[${index}]`, item.file);\r\n            });\r\n            loadingId = set_loading(\"Please wait...\")\r\n            document.getElementById('submit-nft-button').disabled = true;\r\n            \r\n            axios.post(requests.submit_nft, formData)\r\n                .then(response => response.data)\r\n                .then((data)=>{\r\n                    if(data.status == \"success\"){\r\n                        resolve_loading(loadingId, \"success\", data.message)\r\n                        resetForm();\r\n                        setUploadImagesData([]);\r\n                        setThankyou(true);\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error')\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    var data = error.response.data;\r\n                    if(data.status == 'validation_error' && Object.keys(data.message).length > 0 ){\r\n                        \r\n                        resolve_loading(loadingId, \"error\", 'Validation Error');\r\n                        for (var [key, value] of Object.entries(\r\n                            data.message\r\n                        )) {\r\n\r\n                            var keys = key.split('.');\r\n                            if(keys.length > 1){\r\n                                key = keys[0];\r\n                            }\r\n\r\n                            setNftDataError((prev) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [key]: value,\r\n                                };\r\n                            });\r\n                        }\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error');\r\n                    }\r\n                })\r\n                .finally(()=>{\r\n                    document.getElementById('submit-nft-button').disabled = false;\r\n                })\r\n        }\r\n    }\r\n    const saveNftData = (e) => {\r\n        if(e.target.name == \"nft_image\"){\r\n            validate(e.target)\r\n        }\r\n        setNftData((prev)=>{\r\n            if (e.target.type == \"file\") {\r\n                var value = e.target.files[0];\r\n            } else {\r\n                var value = e.target.value;\r\n            }\r\n            return {\r\n                ...prev, \r\n                [e.target.name] : (value == \"\" ? null : value)\r\n            }\r\n        })\r\n    }\r\n    const validate = (el) => {\r\n        if((\r\n            // el.name == 'fname' || \r\n            // el.name == 'lname' ||\r\n            el.name == 'eth_address' || \r\n            el.name == 'nft_name' || \r\n            el.name == 'nft_link' || \r\n            el.name == 'maximum_number_in_collection' || \r\n            el.name == 'collection_blockchain' ||\r\n            el.name == 'twitter_link' \r\n            // || el.name == 'wallet_address' \r\n        ) && el.value.trim() == \"\"){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        // else if(el.name == 'phone' && (el.value.trim()  != \"\" && !(el.value.match(/^\\d{10,12}$/))) ){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Invalid phone number'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'email' && el.value != \"\" && !(el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/))){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Invalid email format'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else if(el.name == 'email' && el.value != \"\"){\r\n            checkEmail(el.value, el.name)\r\n            return true;\r\n        }\r\n        // else if(el.name == 'nft_image' && typeof el.files[0] === 'undefined'){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Field required'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'submit_nft_image' && uploadImagesData.length <= 0){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : null\r\n                }\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n    const checkEmail = (email, field_name) => {\r\n        axios.post(requests.check_email_exist, {\r\n            email : email    \r\n        })\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [field_name] : data.message\r\n                }\r\n            })\r\n        })\r\n        .catch((error)=> {\r\n\r\n        })\r\n    }\r\n\r\n    const saveNftImages = (e) => {\r\n        if(e.target.files && e.target.files.length > 0){\r\n            setUploadImagesData((prev) => {\r\n                return [\r\n                    ...prev,\r\n                    {\r\n                        name: e.target.files[0].name,\r\n                        file: e.target.files[0]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    const deleteNftImages = (index) => {\r\n        setUploadImagesData((prev)=>{\r\n            var data = prev.filter((item, i)=>{\r\n                return index !== i\r\n            })\r\n        return data\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n                <section className=\"submit-nft\">\r\n                    <div className=\"nft-container\">\r\n                        <div className=\"container-lg\">\r\n                            <div className=\"row m-0\">\r\n                                <h4 className='submit-nft-text-message mb-3'>\r\n                                    Listings (Grading NFTs): Submit your NFT for grading, we will run your project through our algorithm and your project will be listed in 24 hours.\r\n                                    <br/> <span className='text-white'>Wallet to send ETH: 0x81f62Dc678F243251Ed734894E6bf080e58A99EB</span>\r\n                                </h4>\r\n                                <div className=\"col-12 heading p-0\">\r\n                                    <h1> <span className=\"highlight\">Submit</span> NFTs </h1>\r\n                                </div>\r\n                                <div className=\"col-lg-9 col-md-8 left-block\">\r\n                                    <div className=\"nft-form\">\r\n                                        <form onSubmit={nftSubmitHandler} method=\"post\" id=\"nft-submit-form\" encType=\"multipart/form-data\">\r\n                                            <div className=\"row m-0\">\r\n                                                <div className=\"col-lg-6 pl-lg-0 left-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About yourself</h3>\r\n                                                        </div>\r\n                                                        {/* <div className=\"full-name form-group\">\r\n                                                            <div className=\"first-name form-group\">\r\n                                                                <input type=\"text\" name=\"fname\" id=\"fname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"First Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.fname}</div>\r\n                                                            </div>\r\n                                                            <div className=\"last-name form-group\">\r\n                                                                <input type=\"text\" name=\"lname\" id=\"lname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Last Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.lname}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"tel\" name=\"phone\" id=\"phone\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Phone Number\" />\r\n                                                            <div className=\"error-message\">{nftDataError.phone}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"project_name\" id=\"project_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.project_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"email\" name=\"email\" id=\"email\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Email\" />\r\n                                                            <div className=\"error-message\">{nftDataError.email}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"opensea_link\" id=\"opensea_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Collection Link (Important)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.opensea_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"wallet_address\" id=\"wallet_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Wallet address (sent ETH from)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.wallet_address}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"twitter_link\" id=\"twitter_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Twitter\" />\r\n                                                            <div className=\"error-message\">{nftDataError.twitter_link}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"discord_link\" id=\"discord_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Discord\" />\r\n                                                            <div className=\"error-message\">{nftDataError.discord_link}</div>\r\n                                                        </div>\r\n                                                        <div className='form-group border-dashed mb-2'>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is the maximum number of items in your collection?</label>\r\n                                                            <input type=\"number\" min={1} name=\"maximum_number_in_collection\" id=\"maximum_number_in_collection\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.maximum_number_in_collection}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">How much have you sold items have you sold from your collection?</label>\r\n                                                            <input type=\"text\" name=\"item_sold\" id=\"item_sold\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.item_sold}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's blockchain?</label>\r\n                                                            <input type=\"text\" name=\"collection_blockchain\" id=\"collection_blockchain\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_blockchain}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's contract address(es)? (If available)</label>\r\n                                                            <input type=\"text\" name=\"collection_contract_address\" id=\"collection_contract_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_contract_address}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"eth_address\" id=\"eth_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"ETH Address\" />\r\n                                                            <div className=\"error-message\">{nftDataError.eth_address}</div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6 right-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About your NFTs</h3>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"nft_name\" id=\"nft_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"nft_link\" id=\"nft_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Link\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"file\" name=\"nft_image\" id=\"nft_image\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"d-none\"/>\r\n                                                            <label htmlFor=\"nft_image\" className=\"file-label form-control\"> \r\n                                                                {nftData.nft_image ? nftData.nft_image.name : \"Image\"}\r\n                                                            </label>\r\n                                                            <div className=\"error-message\">{nftDataError.nft_image}</div>\r\n                                                        </div> */}\r\n                                                        <UploadImageInput \r\n                                                            uploadImagesData={uploadImagesData}\r\n                                                            saveNftImages={saveNftImages}\r\n                                                            deleteNftImages={deleteNftImages}\r\n                                                            validate={validate}\r\n                                                            nftDataError={nftDataError}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"submit\" id=\"submit-nft-button\" className=\"form-btn nft-submit-btn\">Submit</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-3 col-md-4 right-block\">\r\n                                    <div className=\"image\">\r\n                                        <img src={assetUrl+\"images/img3.png\"} alt=\"dummy image\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* overlay for thankyou */}\r\n                {\r\n                    thankyou ? <>\r\n                        <div className=\"custom-modal d-block\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"title\">\r\n                                        <h4>Thank you</h4>\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <p>\r\n                                            We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"redirect\">\r\n                                        <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"overlay d-block\"></div>\r\n                    </> : <></>\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitNft\r\n","import React from \"react\";\r\n\r\nfunction SocialMediaInput({\r\n  addSocialMediaField,\r\n  deleteSocialMediaField,\r\n  socialMediaData,\r\n  socialMediaDataError,\r\n  upcommingNftDataError,\r\n  ...props\r\n}) {\r\n    return (\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 col-12\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  name=\"social_media\"\r\n                  id=\"social_media\"\r\n                  className=\"form-control\"\r\n                  defaultValue={\"\"}\r\n                >\r\n                  <option disabled value={\"\"}>Social media</option>\r\n                  <option value=\"twitter\">Twitter</option>\r\n                  <option value=\"discord\">Discord</option>\r\n                  <option value=\"facebook\">Facebook</option>\r\n                </select>\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media ? upcommingNftDataError.social_media : socialMediaDataError.social_media}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"social_media_link\"\r\n                  id=\"social_media_link\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Social media link\"\r\n                  // onBlur={(e) => validate(e.target)}\r\n                />\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media_link ? upcommingNftDataError.social_media_link : socialMediaDataError.social_media_link}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-12 mb-3\">\r\n              <div className=\"form-group\">\r\n                <button type=\"button\" className=\"form-btn mt-0 px-4 h-100\" onClick={addSocialMediaField}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                {\r\n                  (socialMediaData && socialMediaData.length > 0) && <>\r\n                  <div className=\"col-12\">\r\n                    <ul className=\"socialmedia-list\">\r\n                    {\r\n                      socialMediaData.map((item, index)=>{\r\n                        return (\r\n                          <>\r\n                            <li><span className=\"highlight\">{item.media}: </span> {item.media_link}  &nbsp; &nbsp;<span className=\"float-right highlight imp\" onClick={()=>{deleteSocialMediaField(index)}}><i class=\"fas fa-times\"></i></span></li>\r\n                          </>\r\n                        );\r\n                      })\r\n                    }\r\n                  </ul>\r\n              </div>\r\n                  </>\r\n                }\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialMediaInput;\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({saveNftImages, uploadImagesData, setuploadImagesData, deleteNftImages, validate, upcommingNftDataError, ...props}) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n            <input type=\"file\" name=\"upcoming_nft_image\" id=\"upcoming_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n            <label htmlFor=\"upcoming_nft_image\" className='file-label'>\r\n                <a className='form-control form-btn d-flex align-items-center'>\r\n                    Choose File\r\n                </a>\r\n            </label>\r\n        </div>\r\n        <div className=\"error-message\">{upcommingNftDataError.upcoming_nft_image || upcommingNftDataError.upcoming_nft_images}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import moment from 'moment-timezone';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport SocialMediaInput from '../partials/upcoming_nft/SocialMediaInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from \"../utils/Requests\";\r\nimport UploadImageInput from './upcoming_nft/UploadImageInput';\r\n\r\nvar loadingId = null;\r\nfunction UpcommingNftForm() {\r\n  const [startDate, setstartDate] = useState(null);\r\n  const [upcommingNftData, setupcommingNftData] = useState({});\r\n  const [upcommingNftDataError, setupcommingNftDataError] = useState({});\r\n  const [thankyou, setThankyou] = useState(false)\r\n  const [socialMediaData, setSocialMediaData] = useState([])\r\n  const [socialMediaDataError, setsocialMediaDataError] = useState({});\r\n  const [uploadImagesData, setuploadImagesData] = useState([])\r\n\r\n  // timezone select \r\n  const timezoneSelectorOptions = [];\r\n  moment.tz.names()\r\n  .reduce((memo, tz) => {\r\n    memo.push({\r\n      name: tz,\r\n      offset: moment.tz(tz).utcOffset()\r\n    });\r\n    \r\n    return memo;\r\n  }, [])\r\n  .sort((a, b) => {\r\n    return a.offset - b.offset\r\n  })\r\n  .reduce((memo, tz) => {\r\n    const timezone = tz.offset ? moment.tz(tz.name).format('Z') : '';\r\n    timezoneSelectorOptions.push({\r\n      name: tz.name,\r\n      option: `(GMT${timezone}) ${tz.name}`\r\n    })\r\n    return null;\r\n  }, \"\");\r\n\r\n  // -------------------\r\n\r\n  const saveNftData = (e) => {\r\n    setupcommingNftData((prev) => {\r\n      if (e.target.type == \"file\") {\r\n        var value = e.target.files[0];\r\n      } else {\r\n        var value = e.target.value;\r\n      }\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: value == \"\" ? null : value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n      document.getElementById('submit-upcomming-nft-form').reset();\r\n      setupcommingNftData({});\r\n      setupcommingNftDataError({});\r\n  }\r\n  const onfocusLunchTime = (e) => {\r\n    e.target.type = 'time';\r\n  }\r\n  const onblurLunchTime = (e) => {\r\n    if(e.value == \"\"){\r\n      e.type = 'text';\r\n    }\r\n    validate(e);\r\n  }\r\n\r\n  const nftUpcommingSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    var flag = true;\r\n    var form = document.getElementById(\"submit-upcomming-nft-form\");\r\n    var allFormControls = Array.from(form.elements);\r\n    allFormControls.forEach((element) => {\r\n      if (!validate(element)) {\r\n        flag = false;\r\n      }\r\n    });\r\n\r\n    if (flag) {\r\n      var formData = new FormData(form);\r\n      uploadImagesData.forEach((item, index) => {\r\n        formData.append(`upcoming_nft_images[${index}]`, item.file);\r\n      });\r\n      formData.append(`socialMediaData`, JSON.stringify(socialMediaData));\r\n      loadingId = set_loading(\"Please wait...\");\r\n      document.getElementById(\"submit-upcomming-nft-button\").disabled = true;\r\n\r\n      axios\r\n        .post(requests.submit_upcomming_nft, formData)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          if (data.status == \"success\") {\r\n            resolve_loading(loadingId, \"success\", data.message);\r\n            resetForm();\r\n            setSocialMediaData([]);\r\n            setuploadImagesData([]);\r\n            setThankyou(true);\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          var data = error.response.data;\r\n          if (data.status == \"validation_error\" && Object.keys(data.message).length > 0) {\r\n            resolve_loading(loadingId, \"error\", \"Validation Error\");\r\n            for (var [key, value] of Object.entries(data.message)) {\r\n              var keys = key.split('.');\r\n              if(keys.length > 1){\r\n                key = keys[0];\r\n              }\r\n              setupcommingNftDataError((prev) => {\r\n                // console.log(key);\r\n                // var keys = key.split('.');\r\n                // if(keys.length > 1){\r\n                //   key = keys;\r\n                // }\r\n                return {\r\n                  ...prev,\r\n                  [key]: value,\r\n                };\r\n              });\r\n            }\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          document.getElementById(\"submit-upcomming-nft-button\").disabled = false;\r\n        });\r\n    }\r\n  };\r\n  const validate = (el) => {\r\n    if (\r\n      (el.name == \"project_name\" ||\r\n        el.name == \"website\" ||\r\n        el.name == \"socialmedia\" ||\r\n        el.name == \"briefdescription\" ||\r\n        el.name == \"network\" ||\r\n        el.name == \"release_date\" ||\r\n        el.name == \"timeZoneSelect\" ||\r\n        el.name == \"release_time\") &&\r\n      (el.value.trim() == \"\" || el.value == null)\r\n    ) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"phone\" && el.value.trim() != \"\" && !el.value.match(/^\\d{10,12}$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid phone number\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"email\" && !el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid email format\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n     else if (el.name == \"nft_image\" && typeof el.files[0] === \"undefined\") {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } \r\n     else if (el.name == \"upcoming_nft_image\" && uploadImagesData.length <= 0) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n    else if((el.name == 'social_media' || el.name == 'social_media_link') && socialMediaData.length <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Field required'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else if((el.name == 'unit_price_eth' && el.value != '') && (el.value * 1) <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Minimum value should be 0'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: null,\r\n        };\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addSocialMediaField = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    if(validate_social_media()){\r\n      setSocialMediaData((prev)=>{\r\n        return [\r\n          ...prev,\r\n          {media:social_media, media_link:social_media_link}\r\n        ]\r\n      })\r\n      document.getElementById('social_media').value = \"\";\r\n      document.getElementById('social_media_link').value = \"\";\r\n    }\r\n  }\r\n  const deleteSocialMediaField = (index) => {\r\n    setSocialMediaData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  const validate_social_media = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    let [social_media_message, social_media_link_message] = [\"\", \"\"];\r\n    let flag = true;\r\n    if(social_media == \"\"){\r\n      flag = false\r\n      social_media_message = 'Field required';\r\n    }\r\n    if(social_media_link == \"\"){\r\n      flag = false\r\n      social_media_link_message = 'Field required';\r\n    }\r\n\r\n\r\n    setupcommingNftDataError({\r\n      social_media : social_media_message,\r\n      social_media_link: social_media_link_message\r\n    })\r\n    return flag\r\n  }\r\n\r\n  const saveNftImages = (e) => {\r\n    if(e.target.files && e.target.files.length > 0){\r\n      setuploadImagesData((prev) => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n  const deleteNftImages = (index) => {\r\n    setuploadImagesData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    document.getElementById(\"upcoming_nft_image\").value = \"\";\r\n  }, [uploadImagesData])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 heading p-0\">\r\n          <h1>\r\n            {\" \"}\r\n            <span className=\"highlight\">Submit</span> Upcoming NFTs{\" \"}\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-12 px-0\">\r\n          <div className=\"nft-form\">\r\n            <form\r\n              action=\"\"\r\n              method=\"post\"\r\n              id=\"submit-upcomming-nft-form\"\r\n              encType=\"multipart/form-data\"\r\n              onSubmit={nftUpcommingSubmitHandler}\r\n            >\r\n              <div className=\"row m-0\">\r\n                <div className=\"col-12 px-0\">\r\n                  <div className=\"box-modal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <div className=\"title\"><h3>About yourself</h3></div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"first-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"text\"\r\n                                  name=\"project_name\"\r\n                                  id=\"project_name\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Project name\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.project_name}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"last-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"url\"\r\n                                  name=\"website\"\r\n                                  id=\"website\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Website\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.website}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {/* <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"form-group\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"socialmedia\"\r\n                                  id=\"socialmedia\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Social Media\"\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.socialmedia}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <DatePicker\r\n                                name=\"release_date\"\r\n                                id=\"release_date\"\r\n                                className=\"form-control\"\r\n                                selected={startDate}\r\n                                onChange={(date) => {setstartDate(date)}}\r\n                                onBlur={(e) => validate(e.target)}\r\n                                minDate={new Date()}\r\n                                placeholderText=\"Launch date\"\r\n                                onChangeRaw={(e) => e.preventDefault()}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_date}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"release_time\"\r\n                                id=\"release_time\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Launch time\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => onblurLunchTime(e.target)}\r\n                                onFocus={onfocusLunchTime}\r\n                              />\r\n\r\n\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_time}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <select \r\n                                name=\"timeZoneSelect\" \r\n                                id=\"timeZoneSelect\" \r\n                                className=\"form-control\" \r\n                                onChange={saveNftData} \r\n                                onBlur={(e) => validate(e.target)}\r\n                                defaultValue={\"\"}>\r\n                                <option disabled value=\"\">Select timezone</option>\r\n                                  {\r\n                                    timezoneSelectorOptions.map((item, index)=>{\r\n                                      return <option value={item.name} key={index}>{item.option}</option>\r\n                                    })\r\n                                  }\r\n                              </select>\r\n                              <div className=\"error-message\">{upcommingNftDataError.timeZoneSelect}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"network\"\r\n                                id=\"network\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Network\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.network}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                min={0}\r\n                                step={\"any\"}\r\n                                name=\"unit_price_eth\"\r\n                                id=\"unit_price_eth\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Unit price in ETH\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.unit_price_eth}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                name=\"max_number_collection\"\r\n                                id=\"max_number_collection\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Max number in the collection\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.max_number_collection}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n\r\n                              <div className='row'>\r\n                                <SocialMediaInput\r\n                                  addSocialMediaField={addSocialMediaField}\r\n                                  deleteSocialMediaField={deleteSocialMediaField}\r\n                                  socialMediaData={socialMediaData}\r\n                                  socialMediaDataError={socialMediaDataError}\r\n                                  setsocialMediaDataError={setsocialMediaDataError}\r\n                                  upcommingNftDataError={upcommingNftDataError}\r\n                                  />\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n                              <UploadImageInput\r\n                                saveNftImages={saveNftImages}\r\n                                deleteNftImages={deleteNftImages}\r\n                                uploadImagesData={uploadImagesData}\r\n                                setuploadImagesData={setuploadImagesData}\r\n                                validate={validate}\r\n                                upcommingNftDataError={upcommingNftDataError}\r\n                              />\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                              <textarea\r\n                                name=\"briefdescription\"\r\n                                id=\"briefdescription\"\r\n                                cols=\"30\"\r\n                                rows=\"10\"\r\n                                className=\"form-control textarea\"\r\n                                placeholder=\"Description\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              ></textarea>\r\n                              <div className=\"error-message\">{upcommingNftDataError.briefdescription}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"form-btn nft-submit-btn\" id=\"submit-upcomming-nft-button\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n          thankyou ? <>\r\n              <div className=\"custom-modal d-block\">\r\n                  <div className=\"wrapper\">\r\n                      <div className=\"content\">\r\n                          <div className=\"title\">\r\n                              <h4>Thank you</h4>\r\n                          </div>\r\n                          <div className=\"icon\">\r\n                              <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                          </div>\r\n                          <div className=\"text\">\r\n                              <p>\r\n                                  We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                              </p>\r\n                          </div>\r\n                          <div className=\"redirect\">\r\n                              <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"overlay d-block\"></div>\r\n          </> : <></>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftForm;\r\n","import $ from 'jquery';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\n\r\nfunction UpcommingNftList() {\r\n  const [upcomming_nft, setupcomming_nft] = useState(false);\r\n  let upcoming_social_media = null;\r\n  useEffect(() => {\r\n    axios\r\n      .get(requests.upcomming_nft)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        setupcomming_nft(data.data);\r\n      })\r\n      .catch(function(error) {});\r\n  }, []);\r\n\r\n  // let upcoming_social_media = JSON.parse(data.socialmedia);\r\n  return (\r\n    <>\r\n      <section className=\"nft-group-section\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row custom-newnft-row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"new-nft\">\r\n                <div className=\"heading\">\r\n                  <h1>\r\n                    <span className=\"highlight\">New</span> NFTs\r\n                  </h1>\r\n                </div>\r\n                <div className=\"nft-table-wrapper d-block\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"nft-table table table-borderless text-left\" id=\"nft-list-table\">\r\n                      <thead id=\"nft-list-table\">\r\n                        <tr>\r\n                          <td>#</td>\r\n                          <td className=\"nft-detail-col\">Project name</td>\r\n                          <td>Network</td>\r\n                          <td className=\"nft-detail-column\">Launch date</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {upcomming_nft ? (\r\n                          upcomming_nft.map(function(item, index) {\r\n                              return (\r\n                                <>\r\n                                  <tr className=\"border-0\" key={uuidv4()}>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{item.project_name}</td>\r\n                                    <td>{item.network || 'NaN'}</td>\r\n                                    <td>\r\n                                      { item.release_date } { item.release_time }\r\n                                    </td>\r\n                                    <td><a className='highlight imp bold-14' \r\n                                      onClick={\r\n                                        (e)=>{\r\n                                          if(e.target.innerHTML == \"Read more\"){\r\n                                            $('#desc'+index).slideDown('fast');\r\n                                            e.target.innerHTML = \"Read less\";\r\n                                          }\r\n                                          else{\r\n                                            $('#desc'+index).slideUp('fast');\r\n                                            e.target.innerHTML = \"Read more\";\r\n                                          }\r\n                                        }\r\n                                      }\r\n                                    >Read more</a></td>\r\n                                  </tr>\r\n                                  <tr key={uuidv4()}>\r\n                                    <td colSpan={5} className=\"text-left py-0 px-2\">\r\n                                      <div id={'desc'+index} style={{display: 'none'}}>\r\n                                        <div className=\"social\">\r\n                                          <span className=\"highlight\"> Social media: </span>\r\n                                            {\r\n                                              (item.socialmedia) ?  \r\n                                                JSON.parse(item.socialmedia).map((item, index) => {\r\n                                                    return <a href={item.media_link} key={uuidv4()} target=\"_blank\" rel=\"noopener noreferrer\" className={item.media}><i className={\"fab fa-\"+item.media}></i></a>\r\n                                                })\r\n                                              :<></>\r\n                                            }\r\n                                            {/* <span className=\"font-weight-normal\"> {item.socialmedia} </span> */}\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Description: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.briefdescription} </span>\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Unit price eth: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.unit_price_eth || 'NaN'} </span>\r\n                                        </div>\r\n                                        <div className='nft-images'>\r\n                                              {\r\n                                                (item.images) ?\r\n                                                  <>\r\n                                                  <span className='highlight'>Images: </span>\r\n                                                    <div>\r\n                                                  {\r\n                                                    JSON.parse(item.images).map((item, index)=>{\r\n                                                      return <a href={nftAssetUrl+item} key={uuidv4()} target={\"_blank\"}>\r\n                                                              <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"100px\" className='mr-2' />\r\n                                                          </a>\r\n                                                    })\r\n                                                  }\r\n                                                  </div>\r\n                                                  </>\r\n                                                  :<></>\r\n                                              }\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })\r\n                        ) : (\r\n                            <tr key={uuidv4()}>\r\n                              <td colSpan={5}>\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mobile-nft-list\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftList;\r\n","import React from 'react'\r\nimport UpcommingNftForm from '../partials/UpcommingNftForm'\r\nimport UpcommingNftList from '../partials/UpcommingNftList'\r\n\r\nfunction UpcommingNft() {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n            <section className=\"submit-nft\">\r\n                <div className=\"nft-container\">\r\n                    <div className=\"container-lg\">\r\n                        <UpcommingNftForm />\r\n                        <UpcommingNftList />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpcommingNft\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from '../partials/Footer';\r\nimport Header from '../partials/Header';\r\nimport CompareNfts from './CompareNfts';\r\nimport ContactUs from './ContactUs';\r\nimport Home from './Home';\r\nimport SubmitNft from './SubmitNft';\r\nimport UpcommingNft from './UpcommingNft';\r\n\r\nfunction Main() {\r\n\r\n    let location = useLocation();\r\n    let [myRoute, setMyRoute] = useState(null)\r\n    useEffect(()=>{\r\n        setMyRoute(location.pathname)\r\n    }, [location])\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header route={myRoute}/>\r\n                \r\n            {/* <Route exact path=\"/app/test\">\r\n                <CompareNfts/>\r\n            </Route> */}\r\n            <Route exact path=\"/app/submit-nft\">\r\n                <SubmitNft/>\r\n            </Route>\r\n            <Route exact path=\"/app/upcomming-nft\">\r\n                <UpcommingNft/>\r\n            </Route>\r\n            <Route exact path=\"/app/contact-us\">\r\n                <ContactUs/>\r\n            </Route>\r\n            <Route exact path=\"/app/compare-nft\">\r\n                <CompareNfts/>\r\n            </Route>\r\n            <Route exact path=\"/app\">\r\n                <Home/>\r\n            </Route>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header />\r\n            <div className=\"admin-container\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"page-404-error text-center\">\r\n                        <div className=\"error\">\r\n                            <h1 className=\"display-1 font-weight-bold\">404</h1>\r\n                            <h2 className=\"peak text-uppercase\">Seems you are lost !</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","const listNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_LIST_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listNft;\r\n","const trendingNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TRENDING_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default trendingNft;\r\n","import { combineReducers } from \"redux\";\r\nimport listNft from \"./listNft\";\r\n// import defaultJobReducere from \"./defaultJob\";\r\n// import updateCounter from \"./updateCounter\";\r\nimport trendingNft from \"./trendingNft\";\r\nconst allReducres = combineReducers({\r\n    trendingNft: trendingNft,\r\n    listNft: listNft\r\n});\r\n\r\nexport default allReducres;\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport './App.css';\nimport Main from \"./pages/Main\";\nimport NoMatch from './partials/NoMatch';\nimport allReducres from \"./reducers\";\nconst store = createStore(\n  allReducres,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\nfunction App() {\n  \n\n\n  return (\n    <Provider store={store}>\n      \n      <Router>\n        {/* <Test/> */}\n        <Switch >\n          \n          \n          <Route exact path={[\"/app\", \"/app/submit-nft\", \"/app/upcomming-nft\", \"/app/contact-us\", \"/ap/test\", \"/app/compare-nft\"]}>\n            <Main/> \n          </Route>\n          <Route path=\"*\">\n              <NoMatch />\n          </Route>\n\n        </Switch >\n\n\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}